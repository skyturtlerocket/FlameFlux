{"ast":null,"code":"var _jsxFileName = \"/Users/timothyha/firecast/frontend/src/components/MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback, forwardRef, useImperativeHandle } from 'react';\nimport { getTileUrl, getIconSizeForSeverity, getSeverityBackgroundColor, getSeverityColorHex } from '../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  fires,\n  mapLayer,\n  onFireClick,\n  satelliteLayers,\n  predictedPerimeterEnabled,\n  predictedPerimeterData\n}, ref) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const polygonsRef = useRef([]);\n  const satelliteMarkersRef = useRef([]);\n  const heatmapLayerRef = useRef(null);\n  const resizeObserverRef = useRef(null);\n  const heatmapLoadedRef = useRef(false);\n  const currentViewRef = useRef({\n    center: [37.7749, -122.4194],\n    zoom: 10\n  });\n\n  // Load Leaflet Heatmap plugin\n  const loadHeatmapPlugin = useCallback(() => {\n    return new Promise(resolve => {\n      if (window.L && window.L.heatLayer) {\n        resolve();\n        return;\n      }\n      if (!document.querySelector('script[src*=\"leaflet-heat\"]')) {\n        const script = document.createElement('script');\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet.heat/0.2.0/leaflet-heat.js';\n        script.onload = () => {\n          heatmapLoadedRef.current = true;\n          resolve();\n        };\n        document.head.appendChild(script);\n      } else {\n        resolve();\n      }\n    });\n  }, []);\n\n  // Get marker color based on satellite and confidence\n  const getSatelliteMarkerColor = useCallback((satellite, confidence) => {\n    const baseColor = satellite === 'VIIRS' ? '#3b82f6' : '#ef4444'; // Blue for VIIRS, Red for MODIS\n    const opacity = Math.max(0.3, confidence / 100);\n    return {\n      color: baseColor,\n      opacity\n    };\n  }, []);\n\n  // Get marker size based on confidence and intensity\n  const getSatelliteMarkerSize = useCallback((confidence, intensity) => {\n    const baseSize = 8;\n    const confidenceMultiplier = confidence / 100;\n    const intensityMultiplier = Math.min(2, intensity / 100);\n    return Math.max(6, baseSize * confidenceMultiplier * intensityMultiplier);\n  }, []);\n\n  // Add satellite markers to map\n  const addSatelliteMarkers = useCallback((map, L) => {\n    // Clear existing satellite markers\n    satelliteMarkersRef.current.forEach(marker => map.removeLayer(marker));\n    satelliteMarkersRef.current = [];\n\n    // Add VIIRS markers\n    if (satelliteLayers.viirs.enabled && satelliteLayers.viewMode === 'markers') {\n      satelliteLayers.viirs.data.forEach(hotspot => {\n        const {\n          color,\n          opacity\n        } = getSatelliteMarkerColor('VIIRS', hotspot.confidence);\n        const size = getSatelliteMarkerSize(hotspot.confidence, hotspot.intensity);\n        const marker = L.circleMarker([hotspot.latitude, hotspot.longitude], {\n          radius: size,\n          fillColor: color,\n          color: color,\n          weight: 1,\n          opacity: opacity,\n          fillOpacity: opacity * 0.8\n        }).addTo(map);\n        marker.bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 14px; margin: 0 0 8px 0; color: #3b82f6;\">VIIRS Hotspot</h3>\n            <p style=\"margin: 2px 0; font-size: 12px;\">ID: ${hotspot.id}</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Confidence: ${hotspot.confidence}%</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Intensity: ${hotspot.intensity}</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Age: ${hotspot.age} hours</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Lat: ${hotspot.latitude.toFixed(4)}, Lng: ${hotspot.longitude.toFixed(4)}</p>\n          </div>\n        `);\n        satelliteMarkersRef.current.push(marker);\n      });\n    }\n\n    // Add MODIS markers\n    if (satelliteLayers.modis.enabled && satelliteLayers.viewMode === 'markers') {\n      satelliteLayers.modis.data.forEach(hotspot => {\n        const {\n          color,\n          opacity\n        } = getSatelliteMarkerColor('MODIS', hotspot.confidence);\n        const size = getSatelliteMarkerSize(hotspot.confidence, hotspot.intensity);\n        const marker = L.circleMarker([hotspot.latitude, hotspot.longitude], {\n          radius: size,\n          fillColor: color,\n          color: color,\n          weight: 1,\n          opacity: opacity,\n          fillOpacity: opacity * 0.8\n        }).addTo(map);\n        marker.bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 14px; margin: 0 0 8px 0; color: #ef4444;\">MODIS Hotspot</h3>\n            <p style=\"margin: 2px 0; font-size: 12px;\">ID: ${hotspot.id}</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Confidence: ${hotspot.confidence}%</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Intensity: ${hotspot.intensity}</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Age: ${hotspot.age} hours</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Lat: ${hotspot.latitude.toFixed(4)}, Lng: ${hotspot.longitude.toFixed(4)}</p>\n          </div>\n        `);\n        satelliteMarkersRef.current.push(marker);\n      });\n    }\n  }, [satelliteLayers, getSatelliteMarkerColor, getSatelliteMarkerSize]);\n\n  // Add heatmap layer\n  const addHeatmapLayer = useCallback(async (map, L) => {\n    if (!heatmapLoadedRef.current) {\n      await loadHeatmapPlugin();\n    }\n\n    // Remove existing heatmap\n    if (heatmapLayerRef.current) {\n      map.removeLayer(heatmapLayerRef.current);\n      heatmapLayerRef.current = null;\n    }\n    if (satelliteLayers.viewMode === 'heatmap' && (satelliteLayers.viirs.enabled || satelliteLayers.modis.enabled)) {\n      const heatmapData = [];\n\n      // Add VIIRS data\n      if (satelliteLayers.viirs.enabled) {\n        satelliteLayers.viirs.data.forEach(hotspot => {\n          const intensity = hotspot.confidence / 100 * (hotspot.intensity / 200);\n          heatmapData.push([hotspot.latitude, hotspot.longitude, intensity]);\n        });\n      }\n\n      // Add MODIS data\n      if (satelliteLayers.modis.enabled) {\n        satelliteLayers.modis.data.forEach(hotspot => {\n          const intensity = hotspot.confidence / 100 * (hotspot.intensity / 200);\n          heatmapData.push([hotspot.latitude, hotspot.longitude, intensity]);\n        });\n      }\n      if (heatmapData.length > 0) {\n        heatmapLayerRef.current = L.heatLayer(heatmapData, {\n          radius: 20,\n          blur: 15,\n          maxZoom: 17,\n          gradient: {\n            0.4: 'blue',\n            0.6: 'cyan',\n            0.7: 'lime',\n            0.8: 'yellow',\n            1.0: 'red'\n          }\n        }).addTo(map);\n      }\n    }\n  }, [satelliteLayers, loadHeatmapPlugin]);\n  const addFirePolygons = useCallback((map, L, fire) => {\n    const {\n      geometry\n    } = fire;\n    try {\n      if (geometry.type === 'Polygon') {\n        const coords = geometry.coordinates[0];\n        if (!coords || coords.length < 3) {\n          console.warn('Invalid polygon coordinates for fire:', fire.name);\n          return;\n        }\n        const leafletCoords = coords.filter(coord => Array.isArray(coord) && coord.length >= 2 && typeof coord[0] === 'number' && typeof coord[1] === 'number' && !isNaN(coord[0]) && !isNaN(coord[1])).map(coord => [coord[1], coord[0]]);\n        if (leafletCoords.length < 3) {\n          console.warn('Not enough valid coordinates for polygon:', fire.name);\n          return;\n        }\n        const polygon = L.polygon(leafletCoords, {\n          color: '#ef4444',\n          weight: 2,\n          opacity: 0.8,\n          fillColor: '#ef4444',\n          fillOpacity: 0.2\n        }).addTo(map);\n        polygonsRef.current.push(polygon);\n      } else if (geometry.type === 'MultiPolygon') {\n        geometry.coordinates.forEach((polygonCoords, index) => {\n          const coords = polygonCoords[0];\n          if (!coords || coords.length < 3) {\n            console.warn(`Invalid polygon coordinates for fire ${fire.name}, polygon ${index}`);\n            return;\n          }\n          const leafletCoords = coords.filter(coord => Array.isArray(coord) && coord.length >= 2 && typeof coord[0] === 'number' && typeof coord[1] === 'number' && !isNaN(coord[0]) && !isNaN(coord[1])).map(coord => [coord[1], coord[0]]);\n          if (leafletCoords.length < 3) {\n            console.warn(`Not enough valid coordinates for polygon ${index} of fire:`, fire.name);\n            return;\n          }\n          const polygon = L.polygon(leafletCoords, {\n            color: '#ef4444',\n            weight: 2,\n            opacity: 0.8,\n            fillColor: '#ef4444',\n            fillOpacity: 0.2\n          }).addTo(map);\n          polygonsRef.current.push(polygon);\n        });\n      }\n    } catch (error) {\n      console.error('Error adding fire polygon for', fire.name, ':', error);\n    }\n  }, []);\n\n  // Add predicted perimeter polygons\n  const addPredictedPerimeterPolygons = useCallback((map, L) => {\n    if (!predictedPerimeterEnabled || !predictedPerimeterData) {\n      console.log('Predicted perimeter not enabled or data missing');\n      return;\n    }\n    if (!predictedPerimeterData.features) {\n      console.log('Predicted perimeter data has no features');\n      return;\n    }\n    console.log('Adding predicted perimeter polygons:', predictedPerimeterData.features.length);\n    predictedPerimeterData.features.forEach((feature, idx) => {\n      if (feature.geometry && feature.geometry.type === 'Polygon') {\n        const coords = feature.geometry.coordinates[0];\n        console.log(`Polygon #${idx} coords:`, coords);\n        const leafletCoords = coords.map(coord => [coord[1], coord[0]]);\n        const polygon = L.polygon(leafletCoords, {\n          color: '#60a5fa',\n          // blue-400 (light blue)\n          weight: 2,\n          opacity: 0.8,\n          fillColor: '#60a5fa',\n          fillOpacity: 0.3\n        }).addTo(map);\n\n        // Store the polygon reference\n        polygonsRef.current.push(polygon);\n        console.log(`Added predicted perimeter polygon #${idx}`);\n      } else {\n        console.log(`Feature #${idx} is not a Polygon or missing geometry`);\n      }\n      // Optionally handle MultiPolygon here\n    });\n  }, [predictedPerimeterEnabled, predictedPerimeterData]);\n  const addFireMarkers = useCallback((map, L) => {\n    // Clear existing markers and polygons\n    markersRef.current.forEach(marker => map.removeLayer(marker));\n    polygonsRef.current.forEach(polygon => map.removeLayer(polygon));\n    markersRef.current = [];\n    polygonsRef.current = [];\n\n    // Add markers for each fire\n    fires.forEach(fire => {\n      // Add polygon outlines\n      addFirePolygons(map, L, fire);\n\n      // Get icon configuration based on severity\n      const iconConfig = getIconSizeForSeverity(fire.severity);\n      const backgroundColor = getSeverityBackgroundColor(fire.severity);\n\n      // Create fire icon with dynamic sizing and color\n      const fireIcon = L.divIcon({\n        html: `<div style=\"\n          background: ${backgroundColor};\n          width: ${iconConfig.size}px;\n          height: ${iconConfig.size}px;\n          border-radius: 50%;\n          border: 3px solid white;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: ${iconConfig.fontSize};\n          cursor: pointer;\n        \">🔥</div>`,\n        className: 'fire-marker',\n        iconSize: [iconConfig.size, iconConfig.size],\n        iconAnchor: [iconConfig.size / 2, iconConfig.size / 2],\n        popupAnchor: [0, -iconConfig.size / 2]\n      });\n\n      // Add marker\n      const marker = L.marker([fire.lat, fire.lng], {\n        icon: fireIcon\n      }).addTo(map).bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 16px; margin: 0 0 8px 0;\">${fire.name}</h3>\n            <p style=\"margin: 2px 0;\">Size: ${fire.size} acres</p>\n            <p style=\"margin: 2px 0;\">Containment: ${fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n            <p style=\"margin: 2px 0; color: ${getSeverityColorHex(fire.severity)}; font-weight: 600;\">\n              Severity: ${fire.severity}\n            </p>\n            <div style=\"display: flex; gap: 8px; margin-top: 8px;\">\n              <button onclick=\"window.selectFire('${fire.id}')\" style=\"\n                background: #3b82f6;\n                color: white;\n                border: none;\n                padding: 4px 8px;\n                border-radius: 4px;\n                cursor: pointer;\n                font-size: 12px;\n              \">View Details</button>\n            </div>\n          </div>\n        `).on('click', () => onFireClick(fire));\n      markersRef.current.push(marker);\n    });\n  }, [fires, onFireClick, addFirePolygons]);\n\n  // Zoom to fire perimeter\n  const zoomToFire = useCallback(fire => {\n    console.log('zoomToFire called with:', fire);\n    if (!mapInstanceRef.current || !fire.geometry) {\n      console.log('Early return - mapInstance:', !!mapInstanceRef.current, 'geometry:', !!fire.geometry);\n      return;\n    }\n    const L = window.L;\n    try {\n      console.log('Fire geometry type:', fire.geometry.type);\n      if (fire.geometry.type === 'Polygon') {\n        const coords = fire.geometry.coordinates[0];\n        console.log('Polygon coordinates:', coords);\n        if (coords && coords.length >= 3) {\n          const leafletCoords = coords.filter(coord => Array.isArray(coord) && coord.length >= 2 && typeof coord[0] === 'number' && typeof coord[1] === 'number' && !isNaN(coord[0]) && !isNaN(coord[1])).map(coord => [coord[1], coord[0]]);\n          console.log('Leaflet coordinates:', leafletCoords);\n          if (leafletCoords.length >= 3) {\n            const bounds = L.latLngBounds(leafletCoords);\n            console.log('Fitting bounds:', bounds);\n            mapInstanceRef.current.fitBounds(bounds, {\n              padding: [20, 20],\n              maxZoom: 15\n            });\n          }\n        }\n      } else if (fire.geometry.type === 'MultiPolygon') {\n        const allCoords = [];\n        fire.geometry.coordinates.forEach(polygonCoords => {\n          const coords = polygonCoords[0];\n          if (coords && coords.length >= 3) {\n            const leafletCoords = coords.filter(coord => Array.isArray(coord) && coord.length >= 2 && typeof coord[0] === 'number' && typeof coord[1] === 'number' && !isNaN(coord[0]) && !isNaN(coord[1])).map(coord => [coord[1], coord[0]]);\n            allCoords.push(...leafletCoords);\n          }\n        });\n        console.log('MultiPolygon all coordinates:', allCoords);\n        if (allCoords.length >= 3) {\n          const bounds = L.latLngBounds(allCoords);\n          console.log('Fitting bounds:', bounds);\n          mapInstanceRef.current.fitBounds(bounds, {\n            padding: [20, 20],\n            maxZoom: 15\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error zooming to fire:', error);\n    }\n  }, [mapInstanceRef]);\n\n  // Cleanup function\n  const cleanup = useCallback(() => {\n    // Disconnect resize observer\n    if (resizeObserverRef.current) {\n      resizeObserverRef.current.disconnect();\n      resizeObserverRef.current = null;\n    }\n\n    // Clean up markers and polygons\n    if (mapInstanceRef.current) {\n      markersRef.current.forEach(marker => {\n        try {\n          mapInstanceRef.current.removeLayer(marker);\n        } catch (e) {\n          console.warn('Error removing marker:', e);\n        }\n      });\n      polygonsRef.current.forEach(polygon => {\n        try {\n          mapInstanceRef.current.removeLayer(polygon);\n        } catch (e) {\n          console.warn('Error removing polygon:', e);\n        }\n      });\n\n      // Clean up satellite markers\n      satelliteMarkersRef.current.forEach(marker => {\n        try {\n          mapInstanceRef.current.removeLayer(marker);\n        } catch (e) {\n          console.warn('Error removing satellite marker:', e);\n        }\n      });\n\n      // Clean up heatmap layer\n      if (heatmapLayerRef.current) {\n        try {\n          mapInstanceRef.current.removeLayer(heatmapLayerRef.current);\n        } catch (e) {\n          console.warn('Error removing heatmap layer:', e);\n        }\n      }\n    }\n    markersRef.current = [];\n    polygonsRef.current = [];\n    satelliteMarkersRef.current = [];\n    heatmapLayerRef.current = null;\n\n    // Remove map instance\n    if (mapInstanceRef.current) {\n      try {\n        mapInstanceRef.current.remove();\n      } catch (e) {\n        console.warn('Error removing map:', e);\n      }\n      mapInstanceRef.current = null;\n    }\n\n    // Clean up global selectFire function\n    if (window.selectFire) {\n      delete window.selectFire;\n    }\n  }, []);\n  useEffect(() => {\n    const loadLeaflet = async () => {\n      try {\n        // Adding CSS\n        if (!document.querySelector('link[href*=\"leaflet\"]')) {\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n          document.head.appendChild(link);\n        }\n\n        // Loading Leaflet\n        if (!window.L) {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n          script.onload = () => {\n            console.log('Leaflet loaded successfully');\n            initializeMap();\n          };\n          script.onerror = () => {\n            console.error('Failed to load Leaflet');\n          };\n          document.head.appendChild(script);\n        } else {\n          initializeMap();\n        }\n      } catch (error) {\n        console.error('Error loading Leaflet:', error);\n      }\n    };\n    const initializeMap = async () => {\n      // Clean up existing map first\n      cleanup();\n      if (!mapRef.current) return;\n      try {\n        const L = window.L;\n\n        // Initialize the map with current view state\n        const map = L.map(mapRef.current, {\n          center: currentViewRef.current.center,\n          zoom: currentViewRef.current.zoom,\n          zoomControl: false\n        });\n\n        // Add tile layer\n        const tileLayer = L.tileLayer(getTileUrl(mapLayer), {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n        mapInstanceRef.current = map;\n        mapInstanceRef.current.tileLayer = tileLayer;\n\n        // Store current view when map moves\n        map.on('moveend', () => {\n          currentViewRef.current = {\n            center: map.getCenter(),\n            zoom: map.getZoom()\n          };\n        });\n\n        // Add fire markers when fires are loaded\n        if (fires.length > 0) {\n          addFireMarkers(map, L);\n        }\n\n        // Add satellite data\n        if (satelliteLayers) {\n          addSatelliteMarkers(map, L);\n          await addHeatmapLayer(map, L);\n        }\n\n        // Map resizing with proper error handling\n        if (mapRef.current) {\n          resizeObserverRef.current = new ResizeObserver(() => {\n            try {\n              if (mapInstanceRef.current && mapRef.current) {\n                // Add a small delay to ensure DOM is ready\n                setTimeout(() => {\n                  if (mapInstanceRef.current && mapRef.current) {\n                    mapInstanceRef.current.invalidateSize();\n                  }\n                }, 50);\n              }\n            } catch (error) {\n              console.warn('Error during map resize:', error);\n            }\n          });\n          resizeObserverRef.current.observe(mapRef.current);\n        }\n        console.log('Map initialized successfully');\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    };\n    loadLeaflet();\n    return cleanup;\n  }, [fires.length, mapLayer, addFireMarkers, cleanup, addSatelliteMarkers, addHeatmapLayer]);\n\n  // Change tiles when map type changes\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current.tileLayer) {\n      const L = window.L;\n      try {\n        mapInstanceRef.current.removeLayer(mapInstanceRef.current.tileLayer);\n        const newTileLayer = L.tileLayer(getTileUrl(mapLayer), {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(mapInstanceRef.current);\n        mapInstanceRef.current.tileLayer = newTileLayer;\n      } catch (error) {\n        console.error('Error changing tile layer:', error);\n      }\n    }\n  }, [mapLayer]);\n\n  // Update markers when fires change\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && fires.length > 0) {\n      try {\n        addFireMarkers(mapInstanceRef.current, window.L);\n      } catch (error) {\n        console.error('Error updating fire markers:', error);\n      }\n    }\n  }, [fires, addFireMarkers]);\n\n  // Update satellite layers when they change\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && satelliteLayers) {\n      try {\n        addSatelliteMarkers(mapInstanceRef.current, window.L);\n        addHeatmapLayer(mapInstanceRef.current, window.L);\n      } catch (error) {\n        console.error('Error updating satellite layers:', error);\n      }\n    }\n  }, [satelliteLayers, addSatelliteMarkers, addHeatmapLayer]);\n\n  // Update polygons when fires or predicted perimeter changes\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L) {\n      try {\n        // Clear existing polygons first\n        polygonsRef.current.forEach(polygon => {\n          try {\n            mapInstanceRef.current.removeLayer(polygon);\n          } catch (e) {\n            console.warn('Error removing polygon:', e);\n          }\n        });\n        polygonsRef.current = [];\n\n        // Add fire polygons\n        fires.forEach(fire => {\n          addFirePolygons(mapInstanceRef.current, window.L, fire);\n        });\n\n        // Add predicted perimeter polygons\n        addPredictedPerimeterPolygons(mapInstanceRef.current, window.L);\n      } catch (error) {\n        console.error('Error updating polygons:', error);\n      }\n    }\n  }, [fires, addFirePolygons, addPredictedPerimeterPolygons]);\n\n  // Make selectFire global for popup buttons\n  useEffect(() => {\n    window.selectFire = fireId => {\n      try {\n        const fire = fires.find(f => f.id === fireId);\n        if (fire) {\n          onFireClick(fire);\n        }\n      } catch (error) {\n        console.error('Error in selectFire:', error);\n      }\n    };\n    window.zoomToFire = fireId => {\n      try {\n        const fire = fires.find(f => f.id === fireId);\n        if (fire) {\n          zoomToFire(fire);\n        }\n      } catch (error) {\n        console.error('Error in zoomToFire:', error);\n      }\n    };\n    return () => {\n      if (window.selectFire) {\n        delete window.selectFire;\n      }\n      if (window.zoomToFire) {\n        delete window.zoomToFire;\n      }\n    };\n  }, [fires, onFireClick, zoomToFire]);\n  useImperativeHandle(ref, () => ({\n    zoomToFire\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"w-full h-full\",\n    style: {\n      minHeight: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 675,\n    columnNumber: 5\n  }, this);\n}, \"ezX76sZc+5Yw3qkd7sG6Yu+LSAU=\")), \"ezX76sZc+5Yw3qkd7sG6Yu+LSAU=\");\n_c2 = MapComponent;\nexport default MapComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapComponent$forwardRef\");\n$RefreshReg$(_c2, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","forwardRef","useImperativeHandle","getTileUrl","getIconSizeForSeverity","getSeverityBackgroundColor","getSeverityColorHex","jsxDEV","_jsxDEV","MapComponent","_s","_c","fires","mapLayer","onFireClick","satelliteLayers","predictedPerimeterEnabled","predictedPerimeterData","ref","mapRef","mapInstanceRef","markersRef","polygonsRef","satelliteMarkersRef","heatmapLayerRef","resizeObserverRef","heatmapLoadedRef","currentViewRef","center","zoom","loadHeatmapPlugin","Promise","resolve","window","L","heatLayer","document","querySelector","script","createElement","src","onload","current","head","appendChild","getSatelliteMarkerColor","satellite","confidence","baseColor","opacity","Math","max","color","getSatelliteMarkerSize","intensity","baseSize","confidenceMultiplier","intensityMultiplier","min","addSatelliteMarkers","map","forEach","marker","removeLayer","viirs","enabled","viewMode","data","hotspot","size","circleMarker","latitude","longitude","radius","fillColor","weight","fillOpacity","addTo","bindPopup","id","age","toFixed","push","modis","addHeatmapLayer","heatmapData","length","blur","maxZoom","gradient","addFirePolygons","fire","geometry","type","coords","coordinates","console","warn","name","leafletCoords","filter","coord","Array","isArray","isNaN","polygon","polygonCoords","index","error","addPredictedPerimeterPolygons","log","features","feature","idx","addFireMarkers","iconConfig","severity","backgroundColor","fireIcon","divIcon","html","fontSize","className","iconSize","iconAnchor","popupAnchor","lat","lng","icon","containment","on","zoomToFire","bounds","latLngBounds","fitBounds","padding","allCoords","cleanup","disconnect","e","remove","selectFire","loadLeaflet","link","rel","href","initializeMap","onerror","zoomControl","tileLayer","attribution","getCenter","getZoom","ResizeObserver","setTimeout","invalidateSize","observe","newTileLayer","fireId","find","f","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/timothyha/firecast/frontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback, forwardRef, useImperativeHandle } from 'react';\nimport { getTileUrl, getIconSizeForSeverity, getSeverityBackgroundColor, getSeverityColorHex } from '../utils/helpers';\n\nconst MapComponent = forwardRef(({ fires, mapLayer, onFireClick, satelliteLayers, predictedPerimeterEnabled, predictedPerimeterData }, ref) => {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const polygonsRef = useRef([]);\n  const satelliteMarkersRef = useRef([]);\n  const heatmapLayerRef = useRef(null);\n  const resizeObserverRef = useRef(null);\n  const heatmapLoadedRef = useRef(false);\n  const currentViewRef = useRef({ center: [37.7749, -122.4194], zoom: 10 });\n\n  // Load Leaflet Heatmap plugin\n  const loadHeatmapPlugin = useCallback(() => {\n    return new Promise((resolve) => {\n      if (window.L && window.L.heatLayer) {\n        resolve();\n        return;\n      }\n\n      if (!document.querySelector('script[src*=\"leaflet-heat\"]')) {\n        const script = document.createElement('script');\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet.heat/0.2.0/leaflet-heat.js';\n        script.onload = () => {\n          heatmapLoadedRef.current = true;\n          resolve();\n        };\n        document.head.appendChild(script);\n      } else {\n        resolve();\n      }\n    });\n  }, []);\n\n  // Get marker color based on satellite and confidence\n  const getSatelliteMarkerColor = useCallback((satellite, confidence) => {\n    const baseColor = satellite === 'VIIRS' ? '#3b82f6' : '#ef4444'; // Blue for VIIRS, Red for MODIS\n    const opacity = Math.max(0.3, confidence / 100);\n    return { color: baseColor, opacity };\n  }, []);\n\n  // Get marker size based on confidence and intensity\n  const getSatelliteMarkerSize = useCallback((confidence, intensity) => {\n    const baseSize = 8;\n    const confidenceMultiplier = confidence / 100;\n    const intensityMultiplier = Math.min(2, intensity / 100);\n    return Math.max(6, baseSize * confidenceMultiplier * intensityMultiplier);\n  }, []);\n\n  // Add satellite markers to map\n  const addSatelliteMarkers = useCallback((map, L) => {\n    // Clear existing satellite markers\n    satelliteMarkersRef.current.forEach(marker => map.removeLayer(marker));\n    satelliteMarkersRef.current = [];\n\n    // Add VIIRS markers\n    if (satelliteLayers.viirs.enabled && satelliteLayers.viewMode === 'markers') {\n      satelliteLayers.viirs.data.forEach(hotspot => {\n        const { color, opacity } = getSatelliteMarkerColor('VIIRS', hotspot.confidence);\n        const size = getSatelliteMarkerSize(hotspot.confidence, hotspot.intensity);\n        \n        const marker = L.circleMarker([hotspot.latitude, hotspot.longitude], {\n          radius: size,\n          fillColor: color,\n          color: color,\n          weight: 1,\n          opacity: opacity,\n          fillOpacity: opacity * 0.8\n        }).addTo(map);\n\n        marker.bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 14px; margin: 0 0 8px 0; color: #3b82f6;\">VIIRS Hotspot</h3>\n            <p style=\"margin: 2px 0; font-size: 12px;\">ID: ${hotspot.id}</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Confidence: ${hotspot.confidence}%</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Intensity: ${hotspot.intensity}</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Age: ${hotspot.age} hours</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Lat: ${hotspot.latitude.toFixed(4)}, Lng: ${hotspot.longitude.toFixed(4)}</p>\n          </div>\n        `);\n\n        satelliteMarkersRef.current.push(marker);\n      });\n    }\n\n    // Add MODIS markers\n    if (satelliteLayers.modis.enabled && satelliteLayers.viewMode === 'markers') {\n      satelliteLayers.modis.data.forEach(hotspot => {\n        const { color, opacity } = getSatelliteMarkerColor('MODIS', hotspot.confidence);\n        const size = getSatelliteMarkerSize(hotspot.confidence, hotspot.intensity);\n        \n        const marker = L.circleMarker([hotspot.latitude, hotspot.longitude], {\n          radius: size,\n          fillColor: color,\n          color: color,\n          weight: 1,\n          opacity: opacity,\n          fillOpacity: opacity * 0.8\n        }).addTo(map);\n\n        marker.bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 14px; margin: 0 0 8px 0; color: #ef4444;\">MODIS Hotspot</h3>\n            <p style=\"margin: 2px 0; font-size: 12px;\">ID: ${hotspot.id}</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Confidence: ${hotspot.confidence}%</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Intensity: ${hotspot.intensity}</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Age: ${hotspot.age} hours</p>\n            <p style=\"margin: 2px 0; font-size: 12px;\">Lat: ${hotspot.latitude.toFixed(4)}, Lng: ${hotspot.longitude.toFixed(4)}</p>\n          </div>\n        `);\n\n        satelliteMarkersRef.current.push(marker);\n      });\n    }\n  }, [satelliteLayers, getSatelliteMarkerColor, getSatelliteMarkerSize]);\n\n  // Add heatmap layer\n  const addHeatmapLayer = useCallback(async (map, L) => {\n    if (!heatmapLoadedRef.current) {\n      await loadHeatmapPlugin();\n    }\n\n    // Remove existing heatmap\n    if (heatmapLayerRef.current) {\n      map.removeLayer(heatmapLayerRef.current);\n      heatmapLayerRef.current = null;\n    }\n\n    if (satelliteLayers.viewMode === 'heatmap' && (satelliteLayers.viirs.enabled || satelliteLayers.modis.enabled)) {\n      const heatmapData = [];\n\n      // Add VIIRS data\n      if (satelliteLayers.viirs.enabled) {\n        satelliteLayers.viirs.data.forEach(hotspot => {\n          const intensity = (hotspot.confidence / 100) * (hotspot.intensity / 200);\n          heatmapData.push([hotspot.latitude, hotspot.longitude, intensity]);\n        });\n      }\n\n      // Add MODIS data\n      if (satelliteLayers.modis.enabled) {\n        satelliteLayers.modis.data.forEach(hotspot => {\n          const intensity = (hotspot.confidence / 100) * (hotspot.intensity / 200);\n          heatmapData.push([hotspot.latitude, hotspot.longitude, intensity]);\n        });\n      }\n\n      if (heatmapData.length > 0) {\n        heatmapLayerRef.current = L.heatLayer(heatmapData, {\n          radius: 20,\n          blur: 15,\n          maxZoom: 17,\n          gradient: {\n            0.4: 'blue',\n            0.6: 'cyan',\n            0.7: 'lime',\n            0.8: 'yellow',\n            1.0: 'red'\n          }\n        }).addTo(map);\n      }\n    }\n  }, [satelliteLayers, loadHeatmapPlugin]);\n\n  const addFirePolygons = useCallback((map, L, fire) => {\n    const { geometry } = fire;\n    \n    try {\n      if (geometry.type === 'Polygon') {\n        const coords = geometry.coordinates[0];\n        \n        if (!coords || coords.length < 3) {\n          console.warn('Invalid polygon coordinates for fire:', fire.name);\n          return;\n        }\n        \n        const leafletCoords = coords\n          .filter(coord => Array.isArray(coord) && coord.length >= 2 && \n                  typeof coord[0] === 'number' && typeof coord[1] === 'number' &&\n                  !isNaN(coord[0]) && !isNaN(coord[1]))\n          .map(coord => [coord[1], coord[0]]);\n        \n        if (leafletCoords.length < 3) {\n          console.warn('Not enough valid coordinates for polygon:', fire.name);\n          return;\n        }\n        \n        const polygon = L.polygon(leafletCoords, {\n          color: '#ef4444',\n          weight: 2,\n          opacity: 0.8,\n          fillColor: '#ef4444',\n          fillOpacity: 0.2\n        }).addTo(map);\n        \n        polygonsRef.current.push(polygon);\n        \n      } else if (geometry.type === 'MultiPolygon') {\n        geometry.coordinates.forEach((polygonCoords, index) => {\n          const coords = polygonCoords[0];\n\n          if (!coords || coords.length < 3) {\n            console.warn(`Invalid polygon coordinates for fire ${fire.name}, polygon ${index}`);\n            return;\n          }\n\n          const leafletCoords = coords\n            .filter(coord => Array.isArray(coord) && coord.length >= 2 && \n                    typeof coord[0] === 'number' && typeof coord[1] === 'number' && \n                    !isNaN(coord[0]) && !isNaN(coord[1]))\n            .map(coord => [coord[1], coord[0]]);\n          \n          if (leafletCoords.length < 3) {\n            console.warn(`Not enough valid coordinates for polygon ${index} of fire:`, fire.name);\n            return;\n          }\n          \n          const polygon = L.polygon(leafletCoords, {\n            color: '#ef4444',\n            weight: 2,\n            opacity: 0.8,\n            fillColor: '#ef4444',\n            fillOpacity: 0.2\n          }).addTo(map);\n          \n          polygonsRef.current.push(polygon);\n        });\n      }\n    } catch (error) {\n      console.error('Error adding fire polygon for', fire.name, ':', error);\n    }\n  }, []);\n\n  // Add predicted perimeter polygons\n  const addPredictedPerimeterPolygons = useCallback((map, L) => {\n    if (!predictedPerimeterEnabled || !predictedPerimeterData) {\n      console.log('Predicted perimeter not enabled or data missing');\n      return;\n    }\n    if (!predictedPerimeterData.features) {\n      console.log('Predicted perimeter data has no features');\n      return;\n    }\n    console.log('Adding predicted perimeter polygons:', predictedPerimeterData.features.length);\n    predictedPerimeterData.features.forEach((feature, idx) => {\n      if (feature.geometry && feature.geometry.type === 'Polygon') {\n        const coords = feature.geometry.coordinates[0];\n        console.log(`Polygon #${idx} coords:`, coords);\n        const leafletCoords = coords.map(coord => [coord[1], coord[0]]);\n        const polygon = L.polygon(leafletCoords, {\n          color: '#60a5fa', // blue-400 (light blue)\n          weight: 2,\n          opacity: 0.8,\n          fillColor: '#60a5fa',\n          fillOpacity: 0.3\n        }).addTo(map);\n        \n        // Store the polygon reference\n        polygonsRef.current.push(polygon);\n        console.log(`Added predicted perimeter polygon #${idx}`);\n      } else {\n        console.log(`Feature #${idx} is not a Polygon or missing geometry`);\n      }\n      // Optionally handle MultiPolygon here\n    });\n  }, [predictedPerimeterEnabled, predictedPerimeterData]);\n\n  const addFireMarkers = useCallback((map, L) => {\n    // Clear existing markers and polygons\n    markersRef.current.forEach(marker => map.removeLayer(marker));\n    polygonsRef.current.forEach(polygon => map.removeLayer(polygon));\n    markersRef.current = [];\n    polygonsRef.current = [];\n\n    // Add markers for each fire\n    fires.forEach(fire => {\n      // Add polygon outlines\n      addFirePolygons(map, L, fire);\n      \n      // Get icon configuration based on severity\n      const iconConfig = getIconSizeForSeverity(fire.severity);\n      const backgroundColor = getSeverityBackgroundColor(fire.severity);\n      \n      // Create fire icon with dynamic sizing and color\n      const fireIcon = L.divIcon({\n        html: `<div style=\"\n          background: ${backgroundColor};\n          width: ${iconConfig.size}px;\n          height: ${iconConfig.size}px;\n          border-radius: 50%;\n          border: 3px solid white;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: ${iconConfig.fontSize};\n          cursor: pointer;\n        \">🔥</div>`,\n        className: 'fire-marker',\n        iconSize: [iconConfig.size, iconConfig.size],\n        iconAnchor: [iconConfig.size / 2, iconConfig.size / 2],\n        popupAnchor: [0, -iconConfig.size / 2]\n      });\n      \n      // Add marker\n      const marker = L.marker([fire.lat, fire.lng], { icon: fireIcon })\n        .addTo(map)\n        .bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 16px; margin: 0 0 8px 0;\">${fire.name}</h3>\n            <p style=\"margin: 2px 0;\">Size: ${fire.size} acres</p>\n            <p style=\"margin: 2px 0;\">Containment: ${fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n            <p style=\"margin: 2px 0; color: ${getSeverityColorHex(fire.severity)}; font-weight: 600;\">\n              Severity: ${fire.severity}\n            </p>\n            <div style=\"display: flex; gap: 8px; margin-top: 8px;\">\n              <button onclick=\"window.selectFire('${fire.id}')\" style=\"\n                background: #3b82f6;\n                color: white;\n                border: none;\n                padding: 4px 8px;\n                border-radius: 4px;\n                cursor: pointer;\n                font-size: 12px;\n              \">View Details</button>\n            </div>\n          </div>\n        `)\n        .on('click', () => onFireClick(fire));\n\n      markersRef.current.push(marker);\n    });\n  }, [fires, onFireClick, addFirePolygons]);\n\n  // Zoom to fire perimeter\n  const zoomToFire = useCallback((fire) => {\n    console.log('zoomToFire called with:', fire);\n    if (!mapInstanceRef.current || !fire.geometry) {\n      console.log('Early return - mapInstance:', !!mapInstanceRef.current, 'geometry:', !!fire.geometry);\n      return;\n    }\n\n    const L = window.L;\n    try {\n      console.log('Fire geometry type:', fire.geometry.type);\n      if (fire.geometry.type === 'Polygon') {\n        const coords = fire.geometry.coordinates[0];\n        console.log('Polygon coordinates:', coords);\n        if (coords && coords.length >= 3) {\n          const leafletCoords = coords\n            .filter(coord => Array.isArray(coord) && coord.length >= 2 && \n                    typeof coord[0] === 'number' && typeof coord[1] === 'number' &&\n                    !isNaN(coord[0]) && !isNaN(coord[1]))\n            .map(coord => [coord[1], coord[0]]);\n          \n          console.log('Leaflet coordinates:', leafletCoords);\n          if (leafletCoords.length >= 3) {\n            const bounds = L.latLngBounds(leafletCoords);\n            console.log('Fitting bounds:', bounds);\n            mapInstanceRef.current.fitBounds(bounds, { \n              padding: [20, 20],\n              maxZoom: 15 \n            });\n          }\n        }\n      } else if (fire.geometry.type === 'MultiPolygon') {\n        const allCoords = [];\n        fire.geometry.coordinates.forEach(polygonCoords => {\n          const coords = polygonCoords[0];\n          if (coords && coords.length >= 3) {\n            const leafletCoords = coords\n              .filter(coord => Array.isArray(coord) && coord.length >= 2 && \n                      typeof coord[0] === 'number' && typeof coord[1] === 'number' &&\n                      !isNaN(coord[0]) && !isNaN(coord[1]))\n              .map(coord => [coord[1], coord[0]]);\n            allCoords.push(...leafletCoords);\n          }\n        });\n        \n        console.log('MultiPolygon all coordinates:', allCoords);\n        if (allCoords.length >= 3) {\n          const bounds = L.latLngBounds(allCoords);\n          console.log('Fitting bounds:', bounds);\n          mapInstanceRef.current.fitBounds(bounds, { \n            padding: [20, 20],\n            maxZoom: 15 \n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error zooming to fire:', error);\n    }\n  }, [mapInstanceRef]);\n\n  // Cleanup function\n  const cleanup = useCallback(() => {\n    // Disconnect resize observer\n    if (resizeObserverRef.current) {\n      resizeObserverRef.current.disconnect();\n      resizeObserverRef.current = null;\n    }\n\n    // Clean up markers and polygons\n    if (mapInstanceRef.current) {\n      markersRef.current.forEach(marker => {\n        try {\n          mapInstanceRef.current.removeLayer(marker);\n        } catch (e) {\n          console.warn('Error removing marker:', e);\n        }\n      });\n      \n      polygonsRef.current.forEach(polygon => {\n        try {\n          mapInstanceRef.current.removeLayer(polygon);\n        } catch (e) {\n          console.warn('Error removing polygon:', e);\n        }\n      });\n\n      // Clean up satellite markers\n      satelliteMarkersRef.current.forEach(marker => {\n        try {\n          mapInstanceRef.current.removeLayer(marker);\n        } catch (e) {\n          console.warn('Error removing satellite marker:', e);\n        }\n      });\n\n      // Clean up heatmap layer\n      if (heatmapLayerRef.current) {\n        try {\n          mapInstanceRef.current.removeLayer(heatmapLayerRef.current);\n        } catch (e) {\n          console.warn('Error removing heatmap layer:', e);\n        }\n      }\n    }\n\n    markersRef.current = [];\n    polygonsRef.current = [];\n    satelliteMarkersRef.current = [];\n    heatmapLayerRef.current = null;\n\n    // Remove map instance\n    if (mapInstanceRef.current) {\n      try {\n        mapInstanceRef.current.remove();\n      } catch (e) {\n        console.warn('Error removing map:', e);\n      }\n      mapInstanceRef.current = null;\n    }\n\n    // Clean up global selectFire function\n    if (window.selectFire) {\n      delete window.selectFire;\n    }\n  }, []);\n\n  useEffect(() => {\n    const loadLeaflet = async () => {\n      try {\n        // Adding CSS\n        if (!document.querySelector('link[href*=\"leaflet\"]')) {\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n          document.head.appendChild(link);\n        }\n\n        // Loading Leaflet\n        if (!window.L) {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n          script.onload = () => {\n            console.log('Leaflet loaded successfully');\n            initializeMap();\n          };\n          script.onerror = () => {\n            console.error('Failed to load Leaflet');\n          };\n          document.head.appendChild(script);\n        } else {\n          initializeMap();\n        }\n      } catch (error) {\n        console.error('Error loading Leaflet:', error);\n      }\n    };\n\n    const initializeMap = async () => {\n      // Clean up existing map first\n      cleanup();\n\n      if (!mapRef.current) return;\n\n      try {\n        const L = window.L;\n        \n        // Initialize the map with current view state\n        const map = L.map(mapRef.current, {\n          center: currentViewRef.current.center,\n          zoom: currentViewRef.current.zoom,\n          zoomControl: false\n        });\n\n        // Add tile layer\n        const tileLayer = L.tileLayer(getTileUrl(mapLayer), {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n\n        mapInstanceRef.current = map;\n        mapInstanceRef.current.tileLayer = tileLayer;\n\n        // Store current view when map moves\n        map.on('moveend', () => {\n          currentViewRef.current = {\n            center: map.getCenter(),\n            zoom: map.getZoom()\n          };\n        });\n\n        // Add fire markers when fires are loaded\n        if (fires.length > 0) {\n          addFireMarkers(map, L);\n        }\n\n        // Add satellite data\n        if (satelliteLayers) {\n          addSatelliteMarkers(map, L);\n          await addHeatmapLayer(map, L);\n        }\n\n        // Map resizing with proper error handling\n        if (mapRef.current) {\n          resizeObserverRef.current = new ResizeObserver(() => {\n            try {\n              if (mapInstanceRef.current && mapRef.current) {\n                // Add a small delay to ensure DOM is ready\n                setTimeout(() => {\n                  if (mapInstanceRef.current && mapRef.current) {\n                    mapInstanceRef.current.invalidateSize();\n                  }\n                }, 50);\n              }\n            } catch (error) {\n              console.warn('Error during map resize:', error);\n            }\n          });\n          \n          resizeObserverRef.current.observe(mapRef.current);\n        }\n\n        console.log('Map initialized successfully');\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    };\n\n    loadLeaflet();\n\n    return cleanup;\n  }, [fires.length, mapLayer, addFireMarkers, cleanup, addSatelliteMarkers, addHeatmapLayer]);\n\n  // Change tiles when map type changes\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current.tileLayer) {\n      const L = window.L;\n      try {\n        mapInstanceRef.current.removeLayer(mapInstanceRef.current.tileLayer);\n        \n        const newTileLayer = L.tileLayer(getTileUrl(mapLayer), {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(mapInstanceRef.current);\n\n        mapInstanceRef.current.tileLayer = newTileLayer;\n      } catch (error) {\n        console.error('Error changing tile layer:', error);\n      }\n    }\n  }, [mapLayer]);\n\n  // Update markers when fires change\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && fires.length > 0) {\n      try {\n        addFireMarkers(mapInstanceRef.current, window.L);\n      } catch (error) {\n        console.error('Error updating fire markers:', error);\n      }\n    }\n  }, [fires, addFireMarkers]);\n\n  // Update satellite layers when they change\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && satelliteLayers) {\n      try {\n        addSatelliteMarkers(mapInstanceRef.current, window.L);\n        addHeatmapLayer(mapInstanceRef.current, window.L);\n      } catch (error) {\n        console.error('Error updating satellite layers:', error);\n      }\n    }\n  }, [satelliteLayers, addSatelliteMarkers, addHeatmapLayer]);\n\n  // Update polygons when fires or predicted perimeter changes\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L) {\n      try {\n        // Clear existing polygons first\n        polygonsRef.current.forEach(polygon => {\n          try {\n            mapInstanceRef.current.removeLayer(polygon);\n          } catch (e) {\n            console.warn('Error removing polygon:', e);\n          }\n        });\n        polygonsRef.current = [];\n\n        // Add fire polygons\n        fires.forEach(fire => {\n          addFirePolygons(mapInstanceRef.current, window.L, fire);\n        });\n\n        // Add predicted perimeter polygons\n        addPredictedPerimeterPolygons(mapInstanceRef.current, window.L);\n      } catch (error) {\n        console.error('Error updating polygons:', error);\n      }\n    }\n  }, [fires, addFirePolygons, addPredictedPerimeterPolygons]);\n\n  // Make selectFire global for popup buttons\n  useEffect(() => {\n    window.selectFire = (fireId) => {\n      try {\n        const fire = fires.find(f => f.id === fireId);\n        if (fire) {\n          onFireClick(fire);\n        }\n      } catch (error) {\n        console.error('Error in selectFire:', error);\n      }\n    };\n\n    window.zoomToFire = (fireId) => {\n      try {\n        const fire = fires.find(f => f.id === fireId);\n        if (fire) {\n          zoomToFire(fire);\n        }\n      } catch (error) {\n        console.error('Error in zoomToFire:', error);\n      }\n    };\n    \n    return () => {\n      if (window.selectFire) {\n        delete window.selectFire;\n      }\n      if (window.zoomToFire) {\n        delete window.zoomToFire;\n      }\n    };\n  }, [fires, onFireClick, zoomToFire]);\n\n  useImperativeHandle(ref, () => ({\n    zoomToFire,\n  }));\n\n  return (\n    <div \n      ref={mapRef} \n      className=\"w-full h-full\"\n      style={{ minHeight: '500px' }}\n    />\n  );\n});\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}