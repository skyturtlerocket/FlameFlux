{"ast":null,"code":"import React,{useRef,useState,useEffect,useCallback}from'react';import Header from'./Header';import MapComponent from'./MapComponent';import FireList from'./FireList';import PredictionPanel from'./PredictionPanel';import LayersControl from'./LayersControl';import{fetchRealTimeFireData,fetchPrediction}from'../services/fireApi';import{fetchSatelliteData}from'../services/satelliteApi';import{fetchPerimeterPredictions}from'../services/perimeterPredictionApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WildfireDashboard=()=>{var _predictedPerimeterDa;const mapRef=useRef();// State management\nconst[fires,setFires]=useState([]);const[selectedFire,setSelectedFire]=useState(null);const[prediction,setPrediction]=useState(null);const[loading,setLoading]=useState(false);const[showPrediction,setShowPrediction]=useState(false);const[mapLayer,setMapLayer]=useState('satellite');const[dataError,setDataError]=useState(null);const[isLoadingData,setIsLoadingData]=useState(true);const[predictedPerimeterEnabled,setPredictedPerimeterEnabled]=useState(false);const[predictedPerimeterData,setPredictedPerimeterData]=useState(null);// Satellite data state\nconst[satelliteLayers,setSatelliteLayers]=useState({viirs:{enabled:true,data:[]},modis:{enabled:true,data:[]},viewMode:'markers'// 'markers' or 'heatmap'\n});const[isLoadingSatelliteData,setIsLoadingSatelliteData]=useState({viirs:false,modis:false});const loadFireData=useCallback(async()=>{try{setIsLoadingData(true);setDataError(null);const realTimeFireData=await fetchRealTimeFireData();setFires(realTimeFireData);console.log('Fire data loaded successfully:',realTimeFireData.length,'fires');}catch(error){console.error('Failed to load real-time fire data:',error);setDataError(error.message);setFires([]);}finally{setIsLoadingData(false);}},[]);const loadSatelliteData=useCallback(async()=>{try{// Load VIIRS data\nsetIsLoadingSatelliteData(prev=>({...prev,viirs:true}));const viirsData=await fetchSatelliteData('VIIRS');// Load MODIS data\nsetIsLoadingSatelliteData(prev=>({...prev,modis:true}));const modisData=await fetchSatelliteData('MODIS');setSatelliteLayers(prev=>({...prev,viirs:{...prev.viirs,data:viirsData},modis:{...prev.modis,data:modisData}}));console.log('Satellite data loaded successfully:',{viirs:viirsData.length,modis:modisData.length});}catch(error){console.error('Failed to load satellite data:',error);// Don't set dataError for satellite data as it's supplementary\n}finally{setIsLoadingSatelliteData({viirs:false,modis:false});}},[]);useEffect(()=>{// Fetch predicted perimeter GeoJSON on mount\nfetchPerimeterPredictions().then(data=>{console.log('Predicted perimeter data loaded:',data);setPredictedPerimeterData(data);}).catch(err=>{console.error('Failed to fetch predicted perimeter data:',err);setPredictedPerimeterData(null);});},[]);const handlePredictedPerimeterToggle=()=>{setPredictedPerimeterEnabled(val=>{const newVal=!val;console.log('Predicted perimeter toggle:',newVal);return newVal;});};// Load fire data on component mount\nuseEffect(()=>{loadFireData();loadSatelliteData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Empty dependency array since these functions are stable\nconst handleFireClick=useCallback(async fire=>{console.log('handleFireClick called with:',fire);setSelectedFire(fire);setLoading(true);setShowPrediction(true);// Zoom to fire perimeter\nif(fire&&fire.geometry&&mapRef.current&&mapRef.current.zoomToFire){console.log('Attempting to zoom to fire:',fire.name);mapRef.current.zoomToFire(fire);}else{console.log('No geometry found for fire or mapRef not ready:',fire);}try{const predictionData=await fetchPrediction(fire.id,fire);setPrediction(predictionData);}catch(error){console.error('Failed to fetch prediction:',error);setPrediction(null);}finally{setLoading(false);}},[]);const refreshData=useCallback(async()=>{await Promise.all([loadFireData(),loadSatelliteData()]);},[loadFireData,loadSatelliteData]);// Handle satellite layer toggle\nconst handleLayerToggle=useCallback(satellite=>{setSatelliteLayers(prev=>({...prev,[satellite]:{...prev[satellite],enabled:!prev[satellite].enabled}}));},[]);// Handle view mode change\nconst handleViewModeChange=useCallback(mode=>{setSatelliteLayers(prev=>({...prev,viewMode:mode}));},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex flex-col bg-gray-900 text-white\",children:[/*#__PURE__*/_jsx(Header,{mapLayer:mapLayer,setMapLayer:setMapLayer,refreshData:refreshData,isLoadingData:isLoadingData}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-1 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 relative\",children:[/*#__PURE__*/_jsx(MapComponent,{ref:mapRef,fires:fires,mapLayer:mapLayer,onFireClick:handleFireClick,satelliteLayers:satelliteLayers,predictedPerimeterEnabled:predictedPerimeterEnabled,predictedPerimeterData:predictedPerimeterData}),/*#__PURE__*/_jsx(FireList,{fires:fires,handleFireClick:handleFireClick,isLoadingData:isLoadingData,dataError:dataError}),/*#__PURE__*/_jsx(LayersControl,{satelliteLayers:satelliteLayers,onLayerToggle:handleLayerToggle,onViewModeChange:handleViewModeChange,isLoadingSatelliteData:isLoadingSatelliteData,predictedPerimeterEnabled:predictedPerimeterEnabled,onPredictedPerimeterToggle:handlePredictedPerimeterToggle,predictedPerimeterCount:predictedPerimeterData===null||predictedPerimeterData===void 0?void 0:(_predictedPerimeterDa=predictedPerimeterData.features)===null||_predictedPerimeterDa===void 0?void 0:_predictedPerimeterDa.length})]}),/*#__PURE__*/_jsx(PredictionPanel,{showPrediction:showPrediction,setShowPrediction:setShowPrediction,loading:loading,selectedFire:selectedFire,prediction:prediction})]})]});};export default WildfireDashboard;","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","Header","MapComponent","FireList","PredictionPanel","LayersControl","fetchRealTimeFireData","fetchPrediction","fetchSatelliteData","fetchPerimeterPredictions","jsx","_jsx","jsxs","_jsxs","WildfireDashboard","_predictedPerimeterDa","mapRef","fires","setFires","selectedFire","setSelectedFire","prediction","setPrediction","loading","setLoading","showPrediction","setShowPrediction","mapLayer","setMapLayer","dataError","setDataError","isLoadingData","setIsLoadingData","predictedPerimeterEnabled","setPredictedPerimeterEnabled","predictedPerimeterData","setPredictedPerimeterData","satelliteLayers","setSatelliteLayers","viirs","enabled","data","modis","viewMode","isLoadingSatelliteData","setIsLoadingSatelliteData","loadFireData","realTimeFireData","console","log","length","error","message","loadSatelliteData","prev","viirsData","modisData","then","catch","err","handlePredictedPerimeterToggle","val","newVal","handleFireClick","fire","geometry","current","zoomToFire","name","predictionData","id","refreshData","Promise","all","handleLayerToggle","satellite","handleViewModeChange","mode","className","children","ref","onFireClick","onLayerToggle","onViewModeChange","onPredictedPerimeterToggle","predictedPerimeterCount","features"],"sources":["/Users/timothyha/firecast/frontend/src/components/WildfireDashboard.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\nimport Header from './Header';\nimport MapComponent from './MapComponent';\nimport FireList from './FireList';\nimport PredictionPanel from './PredictionPanel';\nimport LayersControl from './LayersControl';\nimport { fetchRealTimeFireData, fetchPrediction } from '../services/fireApi';\nimport { fetchSatelliteData } from '../services/satelliteApi';\nimport { fetchPerimeterPredictions } from '../services/perimeterPredictionApi';\n\nconst WildfireDashboard = () => {\n  const mapRef = useRef();\n  // State management\n  const [fires, setFires] = useState([]);\n  const [selectedFire, setSelectedFire] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [mapLayer, setMapLayer] = useState('satellite');\n  const [dataError, setDataError] = useState(null);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [predictedPerimeterEnabled, setPredictedPerimeterEnabled] = useState(false);\n  const [predictedPerimeterData, setPredictedPerimeterData] = useState(null);\n\n  // Satellite data state\n  const [satelliteLayers, setSatelliteLayers] = useState({\n    viirs: {\n      enabled: true,\n      data: []\n    },\n    modis: {\n      enabled: true,\n      data: []\n    },\n    viewMode: 'markers' // 'markers' or 'heatmap'\n  });\n\n  const [isLoadingSatelliteData, setIsLoadingSatelliteData] = useState({\n    viirs: false,\n    modis: false\n  });\n\n  const loadFireData = useCallback(async () => {\n    try {\n      setIsLoadingData(true);\n      setDataError(null);\n      const realTimeFireData = await fetchRealTimeFireData();\n      setFires(realTimeFireData);\n      console.log('Fire data loaded successfully:', realTimeFireData.length, 'fires');\n    } catch (error) {\n      console.error('Failed to load real-time fire data:', error);\n      setDataError(error.message);\n      setFires([]);\n    } finally {\n      setIsLoadingData(false);\n    }\n  }, []);\n\n  const loadSatelliteData = useCallback(async () => {\n    try {\n              // Load VIIRS data\n        setIsLoadingSatelliteData(prev => ({ ...prev, viirs: true }));\n        const viirsData = await fetchSatelliteData('VIIRS');\n        \n        // Load MODIS data\n        setIsLoadingSatelliteData(prev => ({ ...prev, modis: true }));\n        const modisData = await fetchSatelliteData('MODIS');\n\n      setSatelliteLayers(prev => ({\n        ...prev,\n        viirs: {\n          ...prev.viirs,\n          data: viirsData\n        },\n        modis: {\n          ...prev.modis,\n          data: modisData\n        }\n      }));\n\n      console.log('Satellite data loaded successfully:', {\n        viirs: viirsData.length,\n        modis: modisData.length\n      });\n    } catch (error) {\n      console.error('Failed to load satellite data:', error);\n      // Don't set dataError for satellite data as it's supplementary\n    } finally {\n      setIsLoadingSatelliteData({\n        viirs: false,\n        modis: false\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    // Fetch predicted perimeter GeoJSON on mount\n    fetchPerimeterPredictions()\n      .then(data => {\n        console.log('Predicted perimeter data loaded:', data);\n        setPredictedPerimeterData(data);\n      })\n      .catch(err => {\n        console.error('Failed to fetch predicted perimeter data:', err);\n        setPredictedPerimeterData(null);\n      });\n  }, []);\n\n  const handlePredictedPerimeterToggle = () => {\n    setPredictedPerimeterEnabled(val => {\n      const newVal = !val;\n      console.log('Predicted perimeter toggle:', newVal);\n      return newVal;\n    });\n  };\n\n  // Load fire data on component mount\n  useEffect(() => {\n    loadFireData();\n    loadSatelliteData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty dependency array since these functions are stable\n\n  const handleFireClick = useCallback(async (fire) => {\n    console.log('handleFireClick called with:', fire);\n    setSelectedFire(fire);\n    setLoading(true);\n    setShowPrediction(true);\n    \n    // Zoom to fire perimeter\n    if (fire && fire.geometry && mapRef.current && mapRef.current.zoomToFire) {\n      console.log('Attempting to zoom to fire:', fire.name);\n      mapRef.current.zoomToFire(fire);\n    } else {\n      console.log('No geometry found for fire or mapRef not ready:', fire);\n    }\n    \n    try {\n      const predictionData = await fetchPrediction(fire.id, fire);\n      setPrediction(predictionData);\n    } catch (error) {\n      console.error('Failed to fetch prediction:', error);\n      setPrediction(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n\n\n  const refreshData = useCallback(async () => {\n    await Promise.all([\n      loadFireData(),\n      loadSatelliteData()\n    ]);\n  }, [loadFireData, loadSatelliteData]);\n\n  // Handle satellite layer toggle\n  const handleLayerToggle = useCallback((satellite) => {\n    setSatelliteLayers(prev => ({\n      ...prev,\n      [satellite]: {\n        ...prev[satellite],\n        enabled: !prev[satellite].enabled\n      }\n    }));\n  }, []);\n\n  // Handle view mode change\n  const handleViewModeChange = useCallback((mode) => {\n    setSatelliteLayers(prev => ({\n      ...prev,\n      viewMode: mode\n    }));\n  }, []);\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-900 text-white\">\n      <Header \n        mapLayer={mapLayer}\n        setMapLayer={setMapLayer}\n        refreshData={refreshData}\n        isLoadingData={isLoadingData}\n      />\n\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Map section */}\n        <div className=\"flex-1 relative\">\n          <MapComponent \n            ref={mapRef}\n            fires={fires}\n            mapLayer={mapLayer}\n            onFireClick={handleFireClick}\n            satelliteLayers={satelliteLayers}\n            predictedPerimeterEnabled={predictedPerimeterEnabled}\n            predictedPerimeterData={predictedPerimeterData}\n          />\n          \n          <FireList \n            fires={fires}\n            handleFireClick={handleFireClick}\n            isLoadingData={isLoadingData}\n            dataError={dataError}\n          />\n\n          {/* Layers Control */}\n          <LayersControl\n            satelliteLayers={satelliteLayers}\n            onLayerToggle={handleLayerToggle}\n            onViewModeChange={handleViewModeChange}\n            isLoadingSatelliteData={isLoadingSatelliteData}\n            predictedPerimeterEnabled={predictedPerimeterEnabled}\n            onPredictedPerimeterToggle={handlePredictedPerimeterToggle}\n            predictedPerimeterCount={predictedPerimeterData?.features?.length}\n          />\n        </div>\n\n        {/* Prediction panel */}\n        <PredictionPanel \n          showPrediction={showPrediction}\n          setShowPrediction={setShowPrediction}\n          loading={loading}\n          selectedFire={selectedFire}\n          prediction={prediction}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default WildfireDashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CACvE,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,OAASC,qBAAqB,CAAEC,eAAe,KAAQ,qBAAqB,CAC5E,OAASC,kBAAkB,KAAQ,0BAA0B,CAC7D,OAASC,yBAAyB,KAAQ,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/E,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAC9B,KAAM,CAAAC,MAAM,CAAGnB,MAAM,CAAC,CAAC,CACvB;AACA,KAAM,CAACoB,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACqB,YAAY,CAAEC,eAAe,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACuB,UAAU,CAAEC,aAAa,CAAC,CAAGxB,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACyB,OAAO,CAAEC,UAAU,CAAC,CAAG1B,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAC2B,cAAc,CAAEC,iBAAiB,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAAC6B,QAAQ,CAAEC,WAAW,CAAC,CAAG9B,QAAQ,CAAC,WAAW,CAAC,CACrD,KAAM,CAAC+B,SAAS,CAAEC,YAAY,CAAC,CAAGhC,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACiC,aAAa,CAAEC,gBAAgB,CAAC,CAAGlC,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACmC,yBAAyB,CAAEC,4BAA4B,CAAC,CAAGpC,QAAQ,CAAC,KAAK,CAAC,CACjF,KAAM,CAACqC,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGtC,QAAQ,CAAC,IAAI,CAAC,CAE1E;AACA,KAAM,CAACuC,eAAe,CAAEC,kBAAkB,CAAC,CAAGxC,QAAQ,CAAC,CACrDyC,KAAK,CAAE,CACLC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,EACR,CAAC,CACDC,KAAK,CAAE,CACLF,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,EACR,CAAC,CACDE,QAAQ,CAAE,SAAU;AACtB,CAAC,CAAC,CAEF,KAAM,CAACC,sBAAsB,CAAEC,yBAAyB,CAAC,CAAG/C,QAAQ,CAAC,CACnEyC,KAAK,CAAE,KAAK,CACZG,KAAK,CAAE,KACT,CAAC,CAAC,CAEF,KAAM,CAAAI,YAAY,CAAG9C,WAAW,CAAC,SAAY,CAC3C,GAAI,CACFgC,gBAAgB,CAAC,IAAI,CAAC,CACtBF,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAiB,gBAAgB,CAAG,KAAM,CAAAzC,qBAAqB,CAAC,CAAC,CACtDY,QAAQ,CAAC6B,gBAAgB,CAAC,CAC1BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEF,gBAAgB,CAACG,MAAM,CAAE,OAAO,CAAC,CACjF,CAAE,MAAOC,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC3DrB,YAAY,CAACqB,KAAK,CAACC,OAAO,CAAC,CAC3BlC,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,OAAS,CACRc,gBAAgB,CAAC,KAAK,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAqB,iBAAiB,CAAGrD,WAAW,CAAC,SAAY,CAChD,GAAI,CACM;AACN6C,yBAAyB,CAACS,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAEf,KAAK,CAAE,IAAK,CAAC,CAAC,CAAC,CAC7D,KAAM,CAAAgB,SAAS,CAAG,KAAM,CAAA/C,kBAAkB,CAAC,OAAO,CAAC,CAEnD;AACAqC,yBAAyB,CAACS,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAEZ,KAAK,CAAE,IAAK,CAAC,CAAC,CAAC,CAC7D,KAAM,CAAAc,SAAS,CAAG,KAAM,CAAAhD,kBAAkB,CAAC,OAAO,CAAC,CAErD8B,kBAAkB,CAACgB,IAAI,GAAK,CAC1B,GAAGA,IAAI,CACPf,KAAK,CAAE,CACL,GAAGe,IAAI,CAACf,KAAK,CACbE,IAAI,CAAEc,SACR,CAAC,CACDb,KAAK,CAAE,CACL,GAAGY,IAAI,CAACZ,KAAK,CACbD,IAAI,CAAEe,SACR,CACF,CAAC,CAAC,CAAC,CAEHR,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAE,CACjDV,KAAK,CAAEgB,SAAS,CAACL,MAAM,CACvBR,KAAK,CAAEc,SAAS,CAACN,MACnB,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD;AACF,CAAC,OAAS,CACRN,yBAAyB,CAAC,CACxBN,KAAK,CAAE,KAAK,CACZG,KAAK,CAAE,KACT,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,EAAE,CAAC,CAEN3C,SAAS,CAAC,IAAM,CACd;AACAU,yBAAyB,CAAC,CAAC,CACxBgD,IAAI,CAAChB,IAAI,EAAI,CACZO,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAER,IAAI,CAAC,CACrDL,yBAAyB,CAACK,IAAI,CAAC,CACjC,CAAC,CAAC,CACDiB,KAAK,CAACC,GAAG,EAAI,CACZX,OAAO,CAACG,KAAK,CAAC,2CAA2C,CAAEQ,GAAG,CAAC,CAC/DvB,yBAAyB,CAAC,IAAI,CAAC,CACjC,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAwB,8BAA8B,CAAGA,CAAA,GAAM,CAC3C1B,4BAA4B,CAAC2B,GAAG,EAAI,CAClC,KAAM,CAAAC,MAAM,CAAG,CAACD,GAAG,CACnBb,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEa,MAAM,CAAC,CAClD,MAAO,CAAAA,MAAM,CACf,CAAC,CAAC,CACJ,CAAC,CAED;AACA/D,SAAS,CAAC,IAAM,CACd+C,YAAY,CAAC,CAAC,CACdO,iBAAiB,CAAC,CAAC,CACrB;AACA,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAU,eAAe,CAAG/D,WAAW,CAAC,KAAO,CAAAgE,IAAI,EAAK,CAClDhB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEe,IAAI,CAAC,CACjD5C,eAAe,CAAC4C,IAAI,CAAC,CACrBxC,UAAU,CAAC,IAAI,CAAC,CAChBE,iBAAiB,CAAC,IAAI,CAAC,CAEvB;AACA,GAAIsC,IAAI,EAAIA,IAAI,CAACC,QAAQ,EAAIjD,MAAM,CAACkD,OAAO,EAAIlD,MAAM,CAACkD,OAAO,CAACC,UAAU,CAAE,CACxEnB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEe,IAAI,CAACI,IAAI,CAAC,CACrDpD,MAAM,CAACkD,OAAO,CAACC,UAAU,CAACH,IAAI,CAAC,CACjC,CAAC,IAAM,CACLhB,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAEe,IAAI,CAAC,CACtE,CAEA,GAAI,CACF,KAAM,CAAAK,cAAc,CAAG,KAAM,CAAA9D,eAAe,CAACyD,IAAI,CAACM,EAAE,CAAEN,IAAI,CAAC,CAC3D1C,aAAa,CAAC+C,cAAc,CAAC,CAC/B,CAAE,MAAOlB,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD7B,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,EAAE,CAAC,CAIN,KAAM,CAAA+C,WAAW,CAAGvE,WAAW,CAAC,SAAY,CAC1C,KAAM,CAAAwE,OAAO,CAACC,GAAG,CAAC,CAChB3B,YAAY,CAAC,CAAC,CACdO,iBAAiB,CAAC,CAAC,CACpB,CAAC,CACJ,CAAC,CAAE,CAACP,YAAY,CAAEO,iBAAiB,CAAC,CAAC,CAErC;AACA,KAAM,CAAAqB,iBAAiB,CAAG1E,WAAW,CAAE2E,SAAS,EAAK,CACnDrC,kBAAkB,CAACgB,IAAI,GAAK,CAC1B,GAAGA,IAAI,CACP,CAACqB,SAAS,EAAG,CACX,GAAGrB,IAAI,CAACqB,SAAS,CAAC,CAClBnC,OAAO,CAAE,CAACc,IAAI,CAACqB,SAAS,CAAC,CAACnC,OAC5B,CACF,CAAC,CAAC,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAoC,oBAAoB,CAAG5E,WAAW,CAAE6E,IAAI,EAAK,CACjDvC,kBAAkB,CAACgB,IAAI,GAAK,CAC1B,GAAGA,IAAI,CACPX,QAAQ,CAAEkC,IACZ,CAAC,CAAC,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEhE,KAAA,QAAKiE,SAAS,CAAC,+CAA+C,CAAAC,QAAA,eAC5DpE,IAAA,CAACV,MAAM,EACL0B,QAAQ,CAAEA,QAAS,CACnBC,WAAW,CAAEA,WAAY,CACzB2C,WAAW,CAAEA,WAAY,CACzBxC,aAAa,CAAEA,aAAc,CAC9B,CAAC,cAEFlB,KAAA,QAAKiE,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAE1ClE,KAAA,QAAKiE,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BpE,IAAA,CAACT,YAAY,EACX8E,GAAG,CAAEhE,MAAO,CACZC,KAAK,CAAEA,KAAM,CACbU,QAAQ,CAAEA,QAAS,CACnBsD,WAAW,CAAElB,eAAgB,CAC7B1B,eAAe,CAAEA,eAAgB,CACjCJ,yBAAyB,CAAEA,yBAA0B,CACrDE,sBAAsB,CAAEA,sBAAuB,CAChD,CAAC,cAEFxB,IAAA,CAACR,QAAQ,EACPc,KAAK,CAAEA,KAAM,CACb8C,eAAe,CAAEA,eAAgB,CACjChC,aAAa,CAAEA,aAAc,CAC7BF,SAAS,CAAEA,SAAU,CACtB,CAAC,cAGFlB,IAAA,CAACN,aAAa,EACZgC,eAAe,CAAEA,eAAgB,CACjC6C,aAAa,CAAER,iBAAkB,CACjCS,gBAAgB,CAAEP,oBAAqB,CACvChC,sBAAsB,CAAEA,sBAAuB,CAC/CX,yBAAyB,CAAEA,yBAA0B,CACrDmD,0BAA0B,CAAExB,8BAA+B,CAC3DyB,uBAAuB,CAAElD,sBAAsB,SAAtBA,sBAAsB,kBAAApB,qBAAA,CAAtBoB,sBAAsB,CAAEmD,QAAQ,UAAAvE,qBAAA,iBAAhCA,qBAAA,CAAkCmC,MAAO,CACnE,CAAC,EACC,CAAC,cAGNvC,IAAA,CAACP,eAAe,EACdqB,cAAc,CAAEA,cAAe,CAC/BC,iBAAiB,CAAEA,iBAAkB,CACrCH,OAAO,CAAEA,OAAQ,CACjBJ,YAAY,CAAEA,YAAa,CAC3BE,UAAU,CAAEA,UAAW,CACxB,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}