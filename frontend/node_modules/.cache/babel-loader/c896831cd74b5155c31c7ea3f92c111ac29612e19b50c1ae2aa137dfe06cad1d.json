{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import Header from'./Header';import MapComponent from'./MapComponent';import FireList from'./FireList';import PredictionPanel from'./PredictionPanel';import LayersControl from'./LayersControl';import{fetchRealTimeFireData,fetchPrediction}from'../services/fireApi';import{fetchSatelliteData}from'../services/satelliteApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WildfireDashboard=()=>{// State management\nconst[fires,setFires]=useState([]);const[selectedFire,setSelectedFire]=useState(null);const[prediction,setPrediction]=useState(null);const[loading,setLoading]=useState(false);const[showPrediction,setShowPrediction]=useState(false);const[mapLayer,setMapLayer]=useState('satellite');const[dataError,setDataError]=useState(null);const[isLoadingData,setIsLoadingData]=useState(true);// Satellite data state\nconst[satelliteLayers,setSatelliteLayers]=useState({viirs:{enabled:true,data:[]},modis:{enabled:true,data:[]},viewMode:'markers'// 'markers' or 'heatmap'\n});const[isLoadingSatelliteData,setIsLoadingSatelliteData]=useState({viirs:false,modis:false});const loadFireData=useCallback(async()=>{try{setIsLoadingData(true);setDataError(null);const realTimeFireData=await fetchRealTimeFireData();setFires(realTimeFireData);console.log('Fire data loaded successfully:',realTimeFireData.length,'fires');}catch(error){console.error('Failed to load real-time fire data:',error);setDataError(error.message);setFires([]);}finally{setIsLoadingData(false);}},[]);const loadSatelliteData=useCallback(async()=>{try{// Load VIIRS data\nsetIsLoadingSatelliteData(prev=>({...prev,viirs:true}));const viirsData=await fetchSatelliteData('VIIRS');// Load MODIS data\nsetIsLoadingSatelliteData(prev=>({...prev,modis:true}));const modisData=await fetchSatelliteData('MODIS');setSatelliteLayers(prev=>({...prev,viirs:{...prev.viirs,data:viirsData},modis:{...prev.modis,data:modisData}}));console.log('Satellite data loaded successfully:',{viirs:viirsData.length,modis:modisData.length});}catch(error){console.error('Failed to load satellite data:',error);// Don't set dataError for satellite data as it's supplementary\n}finally{setIsLoadingSatelliteData({viirs:false,modis:false});}},[]);// Load fire data on component mount\nuseEffect(()=>{loadFireData();loadSatelliteData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Empty dependency array since these functions are stable\nconst handleFireClick=useCallback(async fire=>{console.log('handleFireClick called with:',fire);setSelectedFire(fire);setLoading(true);setShowPrediction(true);// Zoom to fire perimeter\nif(fire&&fire.geometry){console.log('Attempting to zoom to fire:',fire.name);window.zoomToFire&&window.zoomToFire(fire);}else{console.log('No geometry found for fire:',fire);}try{const predictionData=await fetchPrediction(fire.id,fire);setPrediction(predictionData);}catch(error){console.error('Failed to fetch prediction:',error);setPrediction(null);}finally{setLoading(false);}},[]);const refreshData=useCallback(async()=>{await Promise.all([loadFireData(),loadSatelliteData()]);},[loadFireData,loadSatelliteData]);// Handle satellite layer toggle\nconst handleLayerToggle=useCallback(satellite=>{setSatelliteLayers(prev=>({...prev,[satellite]:{...prev[satellite],enabled:!prev[satellite].enabled}}));},[]);// Handle view mode change\nconst handleViewModeChange=useCallback(mode=>{setSatelliteLayers(prev=>({...prev,viewMode:mode}));},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex flex-col bg-gray-900 text-white\",children:[/*#__PURE__*/_jsx(Header,{mapLayer:mapLayer,setMapLayer:setMapLayer,refreshData:refreshData,isLoadingData:isLoadingData}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-1 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 relative\",children:[/*#__PURE__*/_jsx(MapComponent,{fires:fires,mapLayer:mapLayer,onFireClick:handleFireClick,satelliteLayers:satelliteLayers}),/*#__PURE__*/_jsx(FireList,{fires:fires,handleFireClick:handleFireClick,isLoadingData:isLoadingData,dataError:dataError}),/*#__PURE__*/_jsx(LayersControl,{satelliteLayers:satelliteLayers,onLayerToggle:handleLayerToggle,onViewModeChange:handleViewModeChange,isLoadingSatelliteData:isLoadingSatelliteData})]}),/*#__PURE__*/_jsx(PredictionPanel,{showPrediction:showPrediction,setShowPrediction:setShowPrediction,loading:loading,selectedFire:selectedFire,prediction:prediction})]})]});};export default WildfireDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Header","MapComponent","FireList","PredictionPanel","LayersControl","fetchRealTimeFireData","fetchPrediction","fetchSatelliteData","jsx","_jsx","jsxs","_jsxs","WildfireDashboard","fires","setFires","selectedFire","setSelectedFire","prediction","setPrediction","loading","setLoading","showPrediction","setShowPrediction","mapLayer","setMapLayer","dataError","setDataError","isLoadingData","setIsLoadingData","satelliteLayers","setSatelliteLayers","viirs","enabled","data","modis","viewMode","isLoadingSatelliteData","setIsLoadingSatelliteData","loadFireData","realTimeFireData","console","log","length","error","message","loadSatelliteData","prev","viirsData","modisData","handleFireClick","fire","geometry","name","window","zoomToFire","predictionData","id","refreshData","Promise","all","handleLayerToggle","satellite","handleViewModeChange","mode","className","children","onFireClick","onLayerToggle","onViewModeChange"],"sources":["/Users/timothyha/firecast/frontend/src/components/WildfireDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Header from './Header';\nimport MapComponent from './MapComponent';\nimport FireList from './FireList';\nimport PredictionPanel from './PredictionPanel';\nimport LayersControl from './LayersControl';\nimport { fetchRealTimeFireData, fetchPrediction } from '../services/fireApi';\nimport { fetchSatelliteData } from '../services/satelliteApi';\n\nconst WildfireDashboard = () => {\n  // State management\n  const [fires, setFires] = useState([]);\n  const [selectedFire, setSelectedFire] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [mapLayer, setMapLayer] = useState('satellite');\n  const [dataError, setDataError] = useState(null);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n\n  // Satellite data state\n  const [satelliteLayers, setSatelliteLayers] = useState({\n    viirs: {\n      enabled: true,\n      data: []\n    },\n    modis: {\n      enabled: true,\n      data: []\n    },\n    viewMode: 'markers' // 'markers' or 'heatmap'\n  });\n\n  const [isLoadingSatelliteData, setIsLoadingSatelliteData] = useState({\n    viirs: false,\n    modis: false\n  });\n\n  const loadFireData = useCallback(async () => {\n    try {\n      setIsLoadingData(true);\n      setDataError(null);\n      const realTimeFireData = await fetchRealTimeFireData();\n      setFires(realTimeFireData);\n      console.log('Fire data loaded successfully:', realTimeFireData.length, 'fires');\n    } catch (error) {\n      console.error('Failed to load real-time fire data:', error);\n      setDataError(error.message);\n      setFires([]);\n    } finally {\n      setIsLoadingData(false);\n    }\n  }, []);\n\n  const loadSatelliteData = useCallback(async () => {\n    try {\n      // Load VIIRS data\n      setIsLoadingSatelliteData(prev => ({ ...prev, viirs: true }));\n      const viirsData = await fetchSatelliteData('VIIRS');\n      \n      // Load MODIS data\n      setIsLoadingSatelliteData(prev => ({ ...prev, modis: true }));\n      const modisData = await fetchSatelliteData('MODIS');\n\n      setSatelliteLayers(prev => ({\n        ...prev,\n        viirs: {\n          ...prev.viirs,\n          data: viirsData\n        },\n        modis: {\n          ...prev.modis,\n          data: modisData\n        }\n      }));\n\n      console.log('Satellite data loaded successfully:', {\n        viirs: viirsData.length,\n        modis: modisData.length\n      });\n    } catch (error) {\n      console.error('Failed to load satellite data:', error);\n      // Don't set dataError for satellite data as it's supplementary\n    } finally {\n      setIsLoadingSatelliteData({\n        viirs: false,\n        modis: false\n      });\n    }\n  }, []);\n\n  // Load fire data on component mount\n  useEffect(() => {\n    loadFireData();\n    loadSatelliteData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty dependency array since these functions are stable\n\n  const handleFireClick = useCallback(async (fire) => {\n    console.log('handleFireClick called with:', fire);\n    setSelectedFire(fire);\n    setLoading(true);\n    setShowPrediction(true);\n    \n    // Zoom to fire perimeter\n    if (fire && fire.geometry) {\n      console.log('Attempting to zoom to fire:', fire.name);\n      window.zoomToFire && window.zoomToFire(fire);\n    } else {\n      console.log('No geometry found for fire:', fire);\n    }\n    \n    try {\n      const predictionData = await fetchPrediction(fire.id, fire);\n      setPrediction(predictionData);\n    } catch (error) {\n      console.error('Failed to fetch prediction:', error);\n      setPrediction(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n\n\n  const refreshData = useCallback(async () => {\n    await Promise.all([\n      loadFireData(),\n      loadSatelliteData()\n    ]);\n  }, [loadFireData, loadSatelliteData]);\n\n  // Handle satellite layer toggle\n  const handleLayerToggle = useCallback((satellite) => {\n    setSatelliteLayers(prev => ({\n      ...prev,\n      [satellite]: {\n        ...prev[satellite],\n        enabled: !prev[satellite].enabled\n      }\n    }));\n  }, []);\n\n  // Handle view mode change\n  const handleViewModeChange = useCallback((mode) => {\n    setSatelliteLayers(prev => ({\n      ...prev,\n      viewMode: mode\n    }));\n  }, []);\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-900 text-white\">\n      <Header \n        mapLayer={mapLayer}\n        setMapLayer={setMapLayer}\n        refreshData={refreshData}\n        isLoadingData={isLoadingData}\n      />\n\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Map section */}\n        <div className=\"flex-1 relative\">\n          <MapComponent \n            fires={fires}\n            mapLayer={mapLayer}\n            onFireClick={handleFireClick}\n            satelliteLayers={satelliteLayers}\n          />\n          \n          <FireList \n            fires={fires}\n            handleFireClick={handleFireClick}\n            isLoadingData={isLoadingData}\n            dataError={dataError}\n          />\n\n          {/* Layers Control */}\n          <LayersControl\n            satelliteLayers={satelliteLayers}\n            onLayerToggle={handleLayerToggle}\n            onViewModeChange={handleViewModeChange}\n            isLoadingSatelliteData={isLoadingSatelliteData}\n          />\n        </div>\n\n        {/* Prediction panel */}\n        <PredictionPanel \n          showPrediction={showPrediction}\n          setShowPrediction={setShowPrediction}\n          loading={loading}\n          selectedFire={selectedFire}\n          prediction={prediction}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default WildfireDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}