{"ast":null,"code":"var _jsxFileName = \"/Users/timothyha/firecast/src/WildfireDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Flame, AlertTriangle, Calendar, Thermometer, Wind, Eye, X, RefreshCw } from 'lucide-react';\n\n// ========================================================================================================================================\n// Sample fire data\n// ========================================================================================================================================\n// We would realistically import fire data through JSON, this example is in JSON format right now\n// ========================================================================================================================================\n// Real-time fire data fetching and processing\n// ========================================================================================================================================\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculatePolygonCenter = (coordinates, geomType) => {\n  let allCoords = [];\n  if (geomType === \"Polygon\") {\n    allCoords = coordinates[0]; // outer ring\n  } else if (geomType === \"MultiPolygon\") {\n    for (let polygon of coordinates) {\n      allCoords = allCoords.concat(polygon[0]); // outer ring of each polygon\n    }\n  }\n  if (allCoords.length === 0) return null;\n\n  // Simple centroid calculation\n  const lngSum = allCoords.reduce((sum, coord) => sum + coord[0], 0);\n  const latSum = allCoords.reduce((sum, coord) => sum + coord[1], 0);\n  return {\n    lng: lngSum / allCoords.length,\n    lat: latSum / allCoords.length\n  };\n};\nconst getSeverityFromSize = acres => {\n  if (acres >= 50000) return \"High\";\n  if (acres >= 10000) return \"Medium\";\n  return \"Low\";\n};\nconst formatEpochToDateTime = epochMs => {\n  if (!epochMs) return null;\n  const date = new Date(epochMs);\n  return date.toISOString();\n};\nconst getLatestFiresByName = features => {\n  const fireMap = new Map();\n  features.forEach(feature => {\n    const name = feature.properties.incident_name || feature.properties.id || 'Unknown';\n    const dateMs = feature.properties.poly_DateCurrent || 0;\n    if (!fireMap.has(name) || dateMs > fireMap.get(name).properties.poly_DateCurrent) {\n      fireMap.set(name, feature);\n    }\n  });\n  return Array.from(fireMap.values());\n};\nconst fetchRealTimeFireData = async () => {\n  const apiUrl = \"https://rdipowerplatformfd-e5hhgqaahef7fbdr.a02.azurefd.net/incidents/perimeters-gj.json\";\n  try {\n    console.log(\"Fetching real-time fire data...\");\n    const response = await fetch(apiUrl, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    if (data.type !== 'FeatureCollection') {\n      throw new Error('Expected FeatureCollection format');\n    }\n    console.log(`Processing ${data.features.length} fire features...`);\n\n    // Filter to get only the latest fire by name\n    const latestFeatures = getLatestFiresByName(data.features);\n    console.log(`Filtered to ${latestFeatures.length} latest fires`);\n    const processedFires = latestFeatures.map((feature, index) => {\n      const {\n        geometry,\n        properties\n      } = feature;\n\n      // Calculate center point\n      const center = calculatePolygonCenter(geometry.coordinates, geometry.type);\n      if (!center) {\n        console.warn(`Skipping feature ${index + 1}: No valid coordinates`);\n        return null;\n      }\n\n      // Extract properties\n      const name = properties.incident_name || properties.id || `Fire_${index + 1}`;\n      const size = properties.area_acres || 0;\n      const severity = getSeverityFromSize(size);\n      const lastUpdate = formatEpochToDateTime(properties.poly_DateCurrent);\n      return {\n        id: properties.id || index + 1,\n        name: name,\n        lat: center.lat,\n        lng: center.lng,\n        size: size,\n        containment: null,\n        severity: severity,\n        lastUpdate: lastUpdate,\n        weather: null,\n        // Will be implemented later\n        geometry: geometry // Store the geometry for polygon rendering\n      };\n    }).filter(fire => fire !== null); // Remove any null entries\n\n    console.log(`Successfully processed ${processedFires.length} fires`);\n    return processedFires;\n  } catch (error) {\n    console.error('Error fetching real-time fire data:', error);\n    throw error;\n  }\n};\n\n// where the dashboard code starts\nconst WildfireDashboard = () => {\n  _s();\n  //stuff with ui states\n  const [fires, setFires] = useState([]);\n  const [selectedFire, setSelectedFire] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [mapLayer, setMapLayer] = useState('satellite');\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const polygonsRef = useRef([]);\n  useEffect(() => {\n    // Load real-time fire data when component mounts\n    const loadFireData = async () => {\n      try {\n        const realTimeFireData = await fetchRealTimeFireData();\n        setFires(realTimeFireData);\n      } catch (error) {\n        console.error('Failed to load real-time fire data:', error);\n        setFires([]); // Set empty array on error\n      }\n    };\n    loadFireData();\n\n    // loading leaflet and css\n    const loadLeaflet = async () => {\n      // adding css\n      if (!document.querySelector('link[href*=\"leaflet\"]')) {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n        document.head.appendChild(link);\n      }\n\n      // loading leaflet\n      if (!window.L) {\n        const script = document.createElement('script');\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n        script.onload = initializeMap;\n        document.head.appendChild(script);\n      } else {\n        initializeMap();\n      }\n    };\n    //starting the map for the user\n    const initializeMap = () => {\n      if (!mapRef.current || mapInstanceRef.current) return;\n      const L = window.L;\n\n      // Intialize the map to be in San Francisco Bay Area\n      // we could use the user's location in real production, but this is just a default location\n      const map = L.map(mapRef.current, {\n        center: [37.7749, -122.4194],\n        zoom: 10,\n        zoomControl: false\n      });\n\n      // add tile layers because leaflet doesn't have satellite on default\n      const getTileUrl = layer => {\n        switch (layer) {\n          case 'satellite':\n            //satellite\n            return 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\n          case 'terrain':\n            //terrain map\n            return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n          default:\n            //normal\n            return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        }\n      };\n      // credits to open street map\n      const tileLayer = L.tileLayer(getTileUrl(mapLayer), {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n\n      // references\n      mapInstanceRef.current = map;\n      mapInstanceRef.current.tileLayer = tileLayer;\n\n      // add the markers\n      addFireMarkers(map, L);\n\n      // map resizing\n      const resizeObserver = new ResizeObserver(() => {\n        map.invalidateSize();\n      });\n      resizeObserver.observe(mapRef.current);\n      return () => {\n        resizeObserver.disconnect();\n      };\n    };\n    loadLeaflet();\n    // actually display ts\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  // change the tiles when the map type changes\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current.tileLayer) {\n      const L = window.L;\n      mapInstanceRef.current.removeLayer(mapInstanceRef.current.tileLayer);\n      // lebron idk\n      const getTileUrl = layer => {\n        switch (layer) {\n          case 'satellite':\n            return 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\n          case 'terrain':\n            return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n          default:\n            return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        }\n      };\n      const newTileLayer = L.tileLayer(getTileUrl(mapLayer), {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstanceRef.current);\n      mapInstanceRef.current.tileLayer = newTileLayer;\n    }\n  }, [mapLayer]);\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && fires.length > 0) {\n      addFireMarkers(mapInstanceRef.current, window.L);\n    }\n  }, [fires]);\n  const addFirePolygons = (map, L, fire) => {\n    const {\n      geometry\n    } = fire;\n    if (geometry.type === 'Polygon') {\n      // For Polygon: coordinates[0] is the outer ring\n      const coords = geometry.coordinates[0].map(coord => [coord[1], coord[0]]); // Convert [lng, lat] to [lat, lng]\n      const polygon = L.polyline(coords, {\n        color: 'red',\n        weight: 2,\n        opacity: 0.9,\n        fill: false\n      }).addTo(map);\n      polygonsRef.current.push(polygon);\n    } else if (geometry.type === 'MultiPolygon') {\n      // For MultiPolygon: iterate through each polygon\n      geometry.coordinates.forEach(polygonCoords => {\n        const coords = polygonCoords[0].map(coord => [coord[1], coord[0]]); // Convert [lng, lat] to [lat, lng]\n        const polygon = L.polyline(coords, {\n          color: 'red',\n          weight: 2,\n          opacity: 0.9,\n          fill: false\n        }).addTo(map);\n        polygonsRef.current.push(polygon);\n      });\n    }\n  };\n  const addFireMarkers = (map, L) => {\n    // clearing markers and polygons\n    markersRef.current.forEach(marker => map.removeLayer(marker));\n    polygonsRef.current.forEach(polygon => map.removeLayer(polygon));\n    markersRef.current = [];\n    polygonsRef.current = [];\n\n    // fire icon\n    const fireIcon = L.divIcon({\n      html: `<div style=\"\n        background: linear-gradient(45deg, #ef4444, #f97316);\n        width: 28px;\n        height: 28px;\n        border-radius: 50%;\n        border: 3px solid white;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 14px;\n        cursor: pointer;\n      \">🔥</div>`,\n      // claude made this the fire icon idk why lmao\n      className: 'fire-marker',\n      iconSize: [28, 28],\n      iconAnchor: [14, 14],\n      popupAnchor: [0, -14]\n    });\n\n    // markers for the fire\n    fires.forEach(fire => {\n      // Add polygon outlines\n      addFirePolygons(map, L, fire);\n\n      // Add marker\n      const marker = L.marker([fire.lat, fire.lng], {\n        icon: fireIcon\n      }).addTo(map).bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 16px; margin: 0 0 8px 0;\">${fire.name}</h3>\n            <p style=\"margin: 2px 0;\">Size: ${fire.size} acres</p>\n            <p style=\"margin: 2px 0;\">Containment: ${fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n            <p style=\"margin: 2px 0; color: ${getSeverityColorHex(fire.severity)}; font-weight: 600;\">\n              Severity: ${fire.severity}\n            </p>\n            <button onclick=\"window.selectFire(${fire.id})\" style=\"\n              background: #3b82f6;\n              color: white;\n              border: none;\n              padding: 4px 8px;\n              border-radius: 4px;\n              margin-top: 8px;\n              cursor: pointer;\n              font-size: 12px;\n            \">View Prediction</button>\n          </div>\n        `).on('click', () => handleFireClick(fire));\n      markersRef.current.push(marker);\n    });\n  };\n\n  // make it global\n  useEffect(() => {\n    window.selectFire = fireId => {\n      const fire = fires.find(f => f.id === fireId);\n      if (fire) {\n        handleFireClick(fire);\n      }\n    };\n    return () => {\n      delete window.selectFire;\n    };\n  }, [fires]);\n  const getSeverityColorHex = severity => {\n    switch (severity) {\n      case 'High':\n        return '#ef4444';\n      case 'Medium':\n        return '#f97316';\n      case 'Low':\n        return '#eab308';\n      default:\n        return '#6b7280';\n    }\n  };\n  // ========================================================================================================================================\n  // This is where you would get the predictions from the model\n  // ========================================================================================================================================\n  const fetchPrediction = async (fireId, fireData) => {\n    if (!fireData) {\n      console.error('No fire data provided');\n      return;\n    }\n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    // some mock data, we would import this from the model in production\n    const mockPrediction = {\n      fireId: fireId,\n      predictionDate: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      estimatedSize: fireData.size * (1.2 + Math.random() * 0.8),\n      confidence: Math.floor(Math.random() * 20) + 75,\n      riskLevel: Math.random() > 0.5 ? 'High' : 'Critical',\n      perimeter: [[fireData.lat + 0.01, fireData.lng + 0.01], [fireData.lat + 0.02, fireData.lng + 0.005], [fireData.lat + 0.015, fireData.lng - 0.01], [fireData.lat - 0.005, fireData.lng - 0.015], [fireData.lat - 0.01, fireData.lng + 0.005]]\n    };\n    // then we display the predictions into the UI\n    setPrediction(mockPrediction);\n    setShowPrediction(true);\n    setLoading(false);\n  };\n  const handleFireClick = fire => {\n    setSelectedFire(fire);\n    fetchPrediction(fire.id, fire);\n  };\n  // this is in the text when showing the severity of the fire\n  const getSeverityColor = severity => {\n    switch (severity) {\n      case 'High':\n        return 'text-red-400';\n      case 'Medium':\n        return 'text-orange-400';\n      case 'Low':\n        return 'text-yellow-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n  // the date\n  const formatDate = isoString => {\n    return new Date(isoString).toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-gray-800 p-4 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(Flame, {\n            className: \"h-8 w-8 text-orange-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold\",\n            children: \"Wildfire Prediction Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: mapLayer,\n            onChange: e => setMapLayer(e.target.value),\n            className: \"bg-gray-700 text-white px-3 py-2 rounded-lg border border-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"satellite\",\n              children: \"Satellite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"terrain\",\n              children: \"Terrain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"standard\",\n              children: \"Standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.location.reload(),\n            className: \"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-lg flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: mapRef,\n          className: \"w-full h-full\",\n          style: {\n            minHeight: '500px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 left-4 bg-gray-800 bg-opacity-95 backdrop-blur-sm rounded-lg p-4 shadow-xl max-w-sm z-[1000] border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mb-3 flex items-center text-white\",\n            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n              className: \"h-5 w-5 mr-2 text-orange-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), \"Active Fires (\", fires.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2 max-h-48 overflow-y-auto\",\n            children: fires.map(fire => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-700 bg-opacity-90 p-3 rounded-lg cursor-pointer hover:bg-gray-600 hover:bg-opacity-95 transition-all duration-200 border border-gray-600\",\n              onClick: () => handleFireClick(fire),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-semibold text-white\",\n                    children: fire.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-200\",\n                    children: [fire.size, \" acres\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-300\",\n                    children: [\"Containment: \", fire.containment ? `${fire.containment}%` : 'N/A']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right ml-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-sm font-medium ${getSeverityColor(fire.severity)}`,\n                    children: fire.severity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-400 mt-1\",\n                    children: \"Click for prediction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this)\n            }, fire.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), showPrediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-96 bg-gray-800 p-6 overflow-y-auto shadow-xl border-l border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold\",\n            children: \"Fire Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPrediction(false),\n            className: \"text-gray-400 hover:text-white transition-colors\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-32\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-orange-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: \"Generating prediction...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 15\n        }, this) : selectedFire && prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-lg mb-2\",\n              children: selectedFire.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 gap-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Size: \", selectedFire.size, \" acres\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Containment: \", selectedFire.containment ? `${selectedFire.containment}%` : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getSeverityColor(selectedFire.severity),\n                children: [\"Severity: \", selectedFire.severity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Updated: \", formatDate(selectedFire.lastUpdate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 19\n          }, this), selectedFire.weather && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold mb-2 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 25\n              }, this), \"Current Weather\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 gap-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Temperature: \", selectedFire.weather.temperature, \"\\xB0F\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Humidity: \", selectedFire.weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Wind, {\n                  className: \"h-3 w-3 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 27\n                }, this), \"Wind: \", selectedFire.weather.windSpeed, \" mph \", selectedFire.weather.windDirection]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-900 bg-opacity-50 p-4 rounded-lg border border-red-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold mb-2 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 23\n              }, this), \"24-Hour Prediction\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Estimated Size: \", Math.round(prediction.estimatedSize), \" acres\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Growth: +\", Math.round(prediction.estimatedSize - selectedFire.size), \" acres\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Risk Level: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-red-400 font-semibold\",\n                  children: prediction.riskLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Confidence: \", prediction.confidence, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Prediction Date: \", formatDate(prediction.predictionDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n};\n_s(WildfireDashboard, \"MRUFWCYaOWBTSeQYhibFbFUMXUo=\");\n_c = WildfireDashboard;\nexport default WildfireDashboard;\nvar _c;\n$RefreshReg$(_c, \"WildfireDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Flame","AlertTriangle","Calendar","Thermometer","Wind","Eye","X","RefreshCw","jsxDEV","_jsxDEV","calculatePolygonCenter","coordinates","geomType","allCoords","polygon","concat","length","lngSum","reduce","sum","coord","latSum","lng","lat","getSeverityFromSize","acres","formatEpochToDateTime","epochMs","date","Date","toISOString","getLatestFiresByName","features","fireMap","Map","forEach","feature","name","properties","incident_name","id","dateMs","poly_DateCurrent","has","get","set","Array","from","values","fetchRealTimeFireData","apiUrl","console","log","response","fetch","headers","ok","Error","status","data","json","type","latestFeatures","processedFires","map","index","geometry","center","warn","size","area_acres","severity","lastUpdate","containment","weather","filter","fire","error","WildfireDashboard","_s","fires","setFires","selectedFire","setSelectedFire","prediction","setPrediction","loading","setLoading","showPrediction","setShowPrediction","mapLayer","setMapLayer","mapRef","mapInstanceRef","markersRef","polygonsRef","loadFireData","realTimeFireData","loadLeaflet","document","querySelector","link","createElement","rel","href","head","appendChild","window","L","script","src","onload","initializeMap","current","zoom","zoomControl","getTileUrl","layer","tileLayer","attribution","addTo","addFireMarkers","resizeObserver","ResizeObserver","invalidateSize","observe","disconnect","remove","removeLayer","newTileLayer","addFirePolygons","coords","polyline","color","weight","opacity","fill","push","polygonCoords","marker","fireIcon","divIcon","html","className","iconSize","iconAnchor","popupAnchor","icon","bindPopup","getSeverityColorHex","on","handleFireClick","selectFire","fireId","find","f","fetchPrediction","fireData","Promise","resolve","setTimeout","mockPrediction","predictionDate","now","estimatedSize","Math","random","confidence","floor","riskLevel","perimeter","getSeverityColor","formatDate","isoString","toLocaleString","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","location","reload","ref","style","minHeight","temperature","humidity","windSpeed","windDirection","round","_c","$RefreshReg$"],"sources":["/Users/timothyha/firecast/src/WildfireDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Flame, AlertTriangle, Calendar, Thermometer, Wind, Eye, X, RefreshCw } from 'lucide-react';\n\n// ========================================================================================================================================\n// Sample fire data\n// ========================================================================================================================================\n// We would realistically import fire data through JSON, this example is in JSON format right now\n// ========================================================================================================================================\n// Real-time fire data fetching and processing\n// ========================================================================================================================================\n\nconst calculatePolygonCenter = (coordinates, geomType) => {\n  let allCoords = [];\n  \n  if (geomType === \"Polygon\") {\n    allCoords = coordinates[0]; // outer ring\n  } else if (geomType === \"MultiPolygon\") {\n    for (let polygon of coordinates) {\n      allCoords = allCoords.concat(polygon[0]); // outer ring of each polygon\n    }\n  }\n  \n  if (allCoords.length === 0) return null;\n  \n  // Simple centroid calculation\n  const lngSum = allCoords.reduce((sum, coord) => sum + coord[0], 0);\n  const latSum = allCoords.reduce((sum, coord) => sum + coord[1], 0);\n  \n  return {\n    lng: lngSum / allCoords.length,\n    lat: latSum / allCoords.length\n  };\n};\n\nconst getSeverityFromSize = (acres) => {\n  if (acres >= 50000) return \"High\";\n  if (acres >= 10000) return \"Medium\";\n  return \"Low\";\n};\n\nconst formatEpochToDateTime = (epochMs) => {\n  if (!epochMs) return null;\n  const date = new Date(epochMs);\n  return date.toISOString();\n};\n\nconst getLatestFiresByName = (features) => {\n  const fireMap = new Map();\n  \n  features.forEach(feature => {\n    const name = feature.properties.incident_name || feature.properties.id || 'Unknown';\n    const dateMs = feature.properties.poly_DateCurrent || 0;\n    \n    if (!fireMap.has(name) || dateMs > fireMap.get(name).properties.poly_DateCurrent) {\n      fireMap.set(name, feature);\n    }\n  });\n  \n  return Array.from(fireMap.values());\n};\n\nconst fetchRealTimeFireData = async () => {\n  const apiUrl = \"https://rdipowerplatformfd-e5hhgqaahef7fbdr.a02.azurefd.net/incidents/perimeters-gj.json\";\n  \n  try {\n    console.log(\"Fetching real-time fire data...\");\n    const response = await fetch(apiUrl, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    \n    if (data.type !== 'FeatureCollection') {\n      throw new Error('Expected FeatureCollection format');\n    }\n    \n    console.log(`Processing ${data.features.length} fire features...`);\n    \n    // Filter to get only the latest fire by name\n    const latestFeatures = getLatestFiresByName(data.features);\n    console.log(`Filtered to ${latestFeatures.length} latest fires`);\n    \n    const processedFires = latestFeatures.map((feature, index) => {\n      const { geometry, properties } = feature;\n      \n      // Calculate center point\n      const center = calculatePolygonCenter(geometry.coordinates, geometry.type);\n      if (!center) {\n        console.warn(`Skipping feature ${index + 1}: No valid coordinates`);\n        return null;\n      }\n      \n      // Extract properties\n      const name = properties.incident_name || properties.id || `Fire_${index + 1}`;\n      const size = properties.area_acres || 0;\n      const severity = getSeverityFromSize(size);\n      const lastUpdate = formatEpochToDateTime(properties.poly_DateCurrent);\n      \n      return {\n        id: properties.id || index + 1,\n        name: name,\n        lat: center.lat,\n        lng: center.lng,\n        size: size,\n        containment: null,\n        severity: severity,\n        lastUpdate: lastUpdate,\n        weather: null, // Will be implemented later\n        geometry: geometry // Store the geometry for polygon rendering\n      };\n    }).filter(fire => fire !== null); // Remove any null entries\n    \n    console.log(`Successfully processed ${processedFires.length} fires`);\n    return processedFires;\n    \n  } catch (error) {\n    console.error('Error fetching real-time fire data:', error);\n    throw error;\n  }\n};\n\n// where the dashboard code starts\nconst WildfireDashboard = () => {\n  //stuff with ui states\n  const [fires, setFires] = useState([]);\n  const [selectedFire, setSelectedFire] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [mapLayer, setMapLayer] = useState('satellite');\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const polygonsRef = useRef([]);\n\n  useEffect(() => {\n    // Load real-time fire data when component mounts\n    const loadFireData = async () => {\n      try {\n        const realTimeFireData = await fetchRealTimeFireData();\n        setFires(realTimeFireData);\n      } catch (error) {\n        console.error('Failed to load real-time fire data:', error);\n        setFires([]); // Set empty array on error\n      }\n    };\n  \n    loadFireData();\n  \n    // loading leaflet and css\n    const loadLeaflet = async () => {\n      // adding css\n      if (!document.querySelector('link[href*=\"leaflet\"]')) {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n        document.head.appendChild(link);\n      }\n\n      // loading leaflet\n      if (!window.L) {\n        const script = document.createElement('script');\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n        script.onload = initializeMap;\n        document.head.appendChild(script);\n      } else {\n        initializeMap();\n      }\n    };\n    //starting the map for the user\n    const initializeMap = () => {\n      if (!mapRef.current || mapInstanceRef.current) return;\n\n      const L = window.L;\n      \n      // Intialize the map to be in San Francisco Bay Area\n      // we could use the user's location in real production, but this is just a default location\n      const map = L.map(mapRef.current, {\n        center: [37.7749, -122.4194],\n        zoom: 10,\n        zoomControl: false\n      });\n\n      // add tile layers because leaflet doesn't have satellite on default\n      const getTileUrl = (layer) => {\n        switch (layer) {\n          case 'satellite': //satellite\n            return 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\n          case 'terrain': //terrain map\n            return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n          default: //normal\n            return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        }\n      };\n      // credits to open street map\n      const tileLayer = L.tileLayer(getTileUrl(mapLayer), {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n\n      // references\n      mapInstanceRef.current = map;\n      mapInstanceRef.current.tileLayer = tileLayer;\n\n      // add the markers\n      addFireMarkers(map, L);\n\n      // map resizing\n      const resizeObserver = new ResizeObserver(() => {\n        map.invalidateSize();\n      });\n      resizeObserver.observe(mapRef.current);\n\n      return () => {\n        resizeObserver.disconnect();\n      };\n    };\n\n    loadLeaflet();\n    // actually display ts\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  // change the tiles when the map type changes\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current.tileLayer) {\n      const L = window.L;\n      mapInstanceRef.current.removeLayer(mapInstanceRef.current.tileLayer);\n      // lebron idk\n      const getTileUrl = (layer) => {\n        switch (layer) {\n          case 'satellite':\n            return 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\n          case 'terrain':\n            return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n          default:\n            return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        }\n      };\n\n      const newTileLayer = L.tileLayer(getTileUrl(mapLayer), {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstanceRef.current);\n\n      mapInstanceRef.current.tileLayer = newTileLayer;\n    }\n  }, [mapLayer]);\n\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && fires.length > 0) {\n      addFireMarkers(mapInstanceRef.current, window.L);\n    }\n  }, [fires]);\n\n  const addFirePolygons = (map, L, fire) => {\n    const { geometry } = fire;\n    \n    if (geometry.type === 'Polygon') {\n      // For Polygon: coordinates[0] is the outer ring\n      const coords = geometry.coordinates[0].map(coord => [coord[1], coord[0]]); // Convert [lng, lat] to [lat, lng]\n      const polygon = L.polyline(coords, {\n        color: 'red',\n        weight: 2,\n        opacity: 0.9,\n        fill: false\n      }).addTo(map);\n      polygonsRef.current.push(polygon);\n      \n    } else if (geometry.type === 'MultiPolygon') {\n      // For MultiPolygon: iterate through each polygon\n      geometry.coordinates.forEach(polygonCoords => {\n        const coords = polygonCoords[0].map(coord => [coord[1], coord[0]]); // Convert [lng, lat] to [lat, lng]\n        const polygon = L.polyline(coords, {\n          color: 'red',\n          weight: 2,\n          opacity: 0.9,\n          fill: false\n        }).addTo(map);\n        polygonsRef.current.push(polygon);\n      });\n    }\n  };\n\n  const addFireMarkers = (map, L) => {\n    // clearing markers and polygons\n    markersRef.current.forEach(marker => map.removeLayer(marker));\n    polygonsRef.current.forEach(polygon => map.removeLayer(polygon));\n    markersRef.current = [];\n    polygonsRef.current = [];\n\n    // fire icon\n    const fireIcon = L.divIcon({\n      html: `<div style=\"\n        background: linear-gradient(45deg, #ef4444, #f97316);\n        width: 28px;\n        height: 28px;\n        border-radius: 50%;\n        border: 3px solid white;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 14px;\n        cursor: pointer;\n      \">🔥</div>`, // claude made this the fire icon idk why lmao\n      className: 'fire-marker',\n      iconSize: [28, 28],\n      iconAnchor: [14, 14],\n      popupAnchor: [0, -14]\n    });\n\n    // markers for the fire\n    fires.forEach(fire => {\n      // Add polygon outlines\n      addFirePolygons(map, L, fire);\n      \n      // Add marker\n      const marker = L.marker([fire.lat, fire.lng], { icon: fireIcon })\n        .addTo(map)\n        .bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 16px; margin: 0 0 8px 0;\">${fire.name}</h3>\n            <p style=\"margin: 2px 0;\">Size: ${fire.size} acres</p>\n            <p style=\"margin: 2px 0;\">Containment: ${fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n            <p style=\"margin: 2px 0; color: ${getSeverityColorHex(fire.severity)}; font-weight: 600;\">\n              Severity: ${fire.severity}\n            </p>\n            <button onclick=\"window.selectFire(${fire.id})\" style=\"\n              background: #3b82f6;\n              color: white;\n              border: none;\n              padding: 4px 8px;\n              border-radius: 4px;\n              margin-top: 8px;\n              cursor: pointer;\n              font-size: 12px;\n            \">View Prediction</button>\n          </div>\n        `)\n        .on('click', () => handleFireClick(fire));\n\n      markersRef.current.push(marker);\n    });\n  };\n\n  // make it global\n  useEffect(() => {\n    window.selectFire = (fireId) => {\n      const fire = fires.find(f => f.id === fireId);\n      if (fire) {\n        handleFireClick(fire);\n      }\n    };\n    \n    return () => {\n      delete window.selectFire;\n    };\n  }, [fires]);\n\n  const getSeverityColorHex = (severity) => {\n    switch (severity) {\n      case 'High': return '#ef4444';\n      case 'Medium': return '#f97316';\n      case 'Low': return '#eab308';\n      default: return '#6b7280';\n    }\n  };\n  // ========================================================================================================================================\n  // This is where you would get the predictions from the model\n  // ========================================================================================================================================\n  const fetchPrediction = async (fireId, fireData) => {\n    if (!fireData) {\n      console.error('No fire data provided');\n      return;\n    }\n    \n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    // some mock data, we would import this from the model in production\n    const mockPrediction = {\n      fireId: fireId,\n      predictionDate: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      estimatedSize: fireData.size * (1.2 + Math.random() * 0.8),\n      confidence: Math.floor(Math.random() * 20) + 75,\n      riskLevel: Math.random() > 0.5 ? 'High' : 'Critical',\n      perimeter: [\n        [fireData.lat + 0.01, fireData.lng + 0.01],\n        [fireData.lat + 0.02, fireData.lng + 0.005],\n        [fireData.lat + 0.015, fireData.lng - 0.01],\n        [fireData.lat - 0.005, fireData.lng - 0.015],\n        [fireData.lat - 0.01, fireData.lng + 0.005]\n      ]\n    };\n    // then we display the predictions into the UI\n    setPrediction(mockPrediction);\n    setShowPrediction(true);\n    setLoading(false);\n  };\n\n  const handleFireClick = (fire) => {\n    setSelectedFire(fire);\n    fetchPrediction(fire.id, fire);\n  };\n  // this is in the text when showing the severity of the fire\n  const getSeverityColor = (severity) => {\n    switch (severity) {\n      case 'High': return 'text-red-400';\n      case 'Medium': return 'text-orange-400';\n      case 'Low': return 'text-yellow-400';\n      default: return 'text-gray-400';\n    }\n  };\n  // the date\n  const formatDate = (isoString) => {\n    return new Date(isoString).toLocaleString();\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-900 text-white\">\n      {/* the header at the top with like the logo and other settings */}\n      <header className=\"bg-gray-800 p-4 shadow-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Flame className=\"h-8 w-8 text-orange-500\" />\n            <h1 className=\"text-2xl font-bold\">Wildfire Prediction Dashboard</h1>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <select \n              value={mapLayer} \n              onChange={(e) => setMapLayer(e.target.value)}\n              className=\"bg-gray-700 text-white px-3 py-2 rounded-lg border border-gray-600\"\n            >\n              <option value=\"satellite\">Satellite</option>\n              <option value=\"terrain\">Terrain</option>\n              <option value=\"standard\">Standard</option>\n            </select>\n            <button \n              onClick={() => window.location.reload()}\n              className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-lg flex items-center space-x-2\"\n            >\n              <RefreshCw className=\"h-4 w-4\" />\n              <span>Refresh</span>\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* the actual map itself */}\n        <div className=\"flex-1 relative\">\n          <div \n            ref={mapRef} \n            className=\"w-full h-full\"\n            style={{ minHeight: '500px' }}\n          />\n\n          {/* this is that thing that pops up when u click on the icon */}\n          <div className=\"absolute top-4 left-4 bg-gray-800 bg-opacity-95 backdrop-blur-sm rounded-lg p-4 shadow-xl max-w-sm z-[1000] border border-gray-600\">\n            <h3 className=\"text-lg font-bold mb-3 flex items-center text-white\">\n              <AlertTriangle className=\"h-5 w-5 mr-2 text-orange-500\" />\n              Active Fires ({fires.length})\n            </h3>\n            <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n              {fires.map((fire) => (\n                <div\n                  key={fire.id}\n                  className=\"bg-gray-700 bg-opacity-90 p-3 rounded-lg cursor-pointer hover:bg-gray-600 hover:bg-opacity-95 transition-all duration-200 border border-gray-600\"\n                  onClick={() => handleFireClick(fire)}\n                >\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-semibold text-white\">{fire.name}</h4>\n                      <p className=\"text-sm text-gray-200\">{fire.size} acres</p>\n                      <p className=\"text-xs text-gray-300\">Containment: {fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n                    </div>\n                    <div className=\"text-right ml-2\">\n                      <span className={`text-sm font-medium ${getSeverityColor(fire.severity)}`}>\n                        {fire.severity}\n                      </span>\n                      <div className=\"text-xs text-gray-400 mt-1\">\n                        Click for prediction\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* panel where it shows predictions (the one on the right) */}\n        {showPrediction && (\n          <div className=\"w-96 bg-gray-800 p-6 overflow-y-auto shadow-xl border-l border-gray-700\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-xl font-bold\">Fire Prediction</h2>\n              <button\n                onClick={() => setShowPrediction(false)}\n                className=\"text-gray-400 hover:text-white transition-colors\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            {loading ? (\n              <div className=\"flex items-center justify-center h-32\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-orange-500\"></div>\n                <span className=\"ml-2\">Generating prediction...</span>\n              </div>\n            ) : (\n              selectedFire && prediction && (\n                <div className=\"space-y-6\">\n                  {/* fire info */}\n                  <div className=\"bg-gray-700 p-4 rounded-lg\">\n                    <h3 className=\"font-semibold text-lg mb-2\">{selectedFire.name}</h3>\n                    <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                      <div>Size: {selectedFire.size} acres</div>\n                      <div>Containment: {selectedFire.containment ? `${selectedFire.containment}%` : 'N/A'}</div>\n                      <div className={getSeverityColor(selectedFire.severity)}>\n                        Severity: {selectedFire.severity}\n                      </div>\n                      <div>Updated: {formatDate(selectedFire.lastUpdate)}</div>\n                    </div>\n                  </div>\n\n                  {/* weather data */}\n                  {selectedFire.weather && (\n                    <div className=\"bg-gray-700 p-4 rounded-lg\">\n                      <h4 className=\"font-semibold mb-2 flex items-center\">\n                        <Thermometer className=\"h-4 w-4 mr-2\" />\n                        Current Weather\n                      </h4>\n                      <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                        <div>Temperature: {selectedFire.weather.temperature}°F</div>\n                        <div>Humidity: {selectedFire.weather.humidity}%</div>\n                        <div className=\"flex items-center\">\n                          <Wind className=\"h-3 w-3 mr-1\" />\n                          Wind: {selectedFire.weather.windSpeed} mph {selectedFire.weather.windDirection}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* predictions */}\n                  <div className=\"bg-red-900 bg-opacity-50 p-4 rounded-lg border border-red-700\">\n                    <h4 className=\"font-semibold mb-2 flex items-center\">\n                      <Calendar className=\"h-4 w-4 mr-2\" />\n                      24-Hour Prediction\n                    </h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div>Estimated Size: {Math.round(prediction.estimatedSize)} acres</div>\n                      <div>Growth: +{Math.round(prediction.estimatedSize - selectedFire.size)} acres</div>\n                      <div>Risk Level: <span className=\"text-red-400 font-semibold\">{prediction.riskLevel}</span></div>\n                      <div>Confidence: {prediction.confidence}%</div>\n                      <div>Prediction Date: {formatDate(prediction.predictionDate)}</div>\n                    </div>\n                  </div>\n                </div> \n              )\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WildfireDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}