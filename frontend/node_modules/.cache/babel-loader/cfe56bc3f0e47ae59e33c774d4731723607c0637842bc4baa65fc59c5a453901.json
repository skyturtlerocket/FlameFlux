{"ast":null,"code":"// Service to fetch perimeter prediction GeoJSON from the backend\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nexport async function fetchPerimeterPredictions() {\n  const response = await fetch(`${API_BASE_URL}/api/perimeter-predictions`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch perimeter predictions');\n  }\n\n  // Debug: log the raw response text\n  const responseText = await response.text();\n  console.log('Raw response from /api/perimeter-predictions:', responseText.substring(0, 200) + '...');\n  try {\n    return JSON.parse(responseText);\n  } catch (error) {\n    console.error('JSON parse error:', error);\n    console.error('Response text:', responseText);\n    throw error;\n  }\n}","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","fetchPerimeterPredictions","response","fetch","ok","Error","responseText","text","console","log","substring","JSON","parse","error"],"sources":["/Users/timothyha/firecast/frontend/src/services/perimeterPredictionApi.js"],"sourcesContent":["// Service to fetch perimeter prediction GeoJSON from the backend\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nexport async function fetchPerimeterPredictions() {\n  const response = await fetch(`${API_BASE_URL}/api/perimeter-predictions`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch perimeter predictions');\n  }\n\n  // Debug: log the raw response text\n  const responseText = await response.text();\n  console.log('Raw response from /api/perimeter-predictions:', responseText.substring(0, 200) + '...');\n\n  try {\n    return JSON.parse(responseText);\n  } catch (error) {\n    console.error('JSON parse error:', error);\n    console.error('Response text:', responseText);\n    throw error;\n  }\n} "],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,OAAO,eAAeC,yBAAyBA,CAAA,EAAG;EAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,4BAA4B,CAAC;EACzE,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;EAC1D;;EAEA;EACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC1CC,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEH,YAAY,CAACI,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;EAEpG,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACN,YAAY,CAAC;EACjC,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzCL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEP,YAAY,CAAC;IAC7C,MAAMO,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}