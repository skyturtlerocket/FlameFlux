{"ast":null,"code":"var _jsxFileName = \"/Users/timothyha/firecast/frontend/src/components/MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport { getTileUrl, getIconSizeForSeverity, getSeverityBackgroundColor, getSeverityColorHex } from '../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  fires,\n  mapLayer,\n  onFireClick\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const polygonsRef = useRef([]);\n  const resizeObserverRef = useRef(null);\n  const addFirePolygons = useCallback((map, L, fire) => {\n    const {\n      geometry\n    } = fire;\n    try {\n      if (geometry.type === 'Polygon') {\n        const coords = geometry.coordinates[0];\n        if (!coords || coords.length < 3) {\n          console.warn('Invalid polygon coordinates for fire:', fire.name);\n          return;\n        }\n        const leafletCoords = coords.filter(coord => Array.isArray(coord) && coord.length >= 2 && typeof coord[0] === 'number' && typeof coord[1] === 'number' && !isNaN(coord[0]) && !isNaN(coord[1])).map(coord => [coord[1], coord[0]]);\n        if (leafletCoords.length < 3) {\n          console.warn('Not enough valid coordinates for polygon:', fire.name);\n          return;\n        }\n        const polygon = L.polygon(leafletCoords, {\n          color: '#ef4444',\n          weight: 2,\n          opacity: 0.8,\n          fillColor: '#ef4444',\n          fillOpacity: 0.2\n        }).addTo(map);\n        polygonsRef.current.push(polygon);\n      } else if (geometry.type === 'MultiPolygon') {\n        geometry.coordinates.forEach((polygonCoords, index) => {\n          const coords = polygonCoords[0];\n          if (!coords || coords.length < 3) {\n            console.warn(`Invalid polygon coordinates for fire ${fire.name}, polygon ${index}`);\n            return;\n          }\n          const leafletCoords = coords.filter(coord => Array.isArray(coord) && coord.length >= 2 && typeof coord[0] === 'number' && typeof coord[1] === 'number' && !isNaN(coord[0]) && !isNaN(coord[1])).map(coord => [coord[1], coord[0]]);\n          if (leafletCoords.length < 3) {\n            console.warn(`Not enough valid coordinates for polygon ${index} of fire:`, fire.name);\n            return;\n          }\n          const polygon = L.polygon(leafletCoords, {\n            color: '#ef4444',\n            weight: 2,\n            opacity: 0.8,\n            fillColor: '#ef4444',\n            fillOpacity: 0.2\n          }).addTo(map);\n          polygonsRef.current.push(polygon);\n        });\n      }\n    } catch (error) {\n      console.error('Error adding fire polygon for', fire.name, ':', error);\n    }\n  }, []);\n  const addFireMarkers = useCallback((map, L) => {\n    // Clear existing markers and polygons\n    markersRef.current.forEach(marker => map.removeLayer(marker));\n    polygonsRef.current.forEach(polygon => map.removeLayer(polygon));\n    markersRef.current = [];\n    polygonsRef.current = [];\n\n    // Add markers for each fire\n    fires.forEach(fire => {\n      // Add polygon outlines\n      addFirePolygons(map, L, fire);\n\n      // Get icon configuration based on severity\n      const iconConfig = getIconSizeForSeverity(fire.severity);\n      const backgroundColor = getSeverityBackgroundColor(fire.severity);\n\n      // Create fire icon with dynamic sizing and color\n      const fireIcon = L.divIcon({\n        html: `<div style=\"\n          background: ${backgroundColor};\n          width: ${iconConfig.size}px;\n          height: ${iconConfig.size}px;\n          border-radius: 50%;\n          border: 3px solid white;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: ${iconConfig.fontSize};\n          cursor: pointer;\n        \">ðŸ”¥</div>`,\n        className: 'fire-marker',\n        iconSize: [iconConfig.size, iconConfig.size],\n        iconAnchor: [iconConfig.size / 2, iconConfig.size / 2],\n        popupAnchor: [0, -iconConfig.size / 2]\n      });\n\n      // Add marker\n      const marker = L.marker([fire.lat, fire.lng], {\n        icon: fireIcon\n      }).addTo(map).bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 16px; margin: 0 0 8px 0;\">${fire.name}</h3>\n            <p style=\"margin: 2px 0;\">Size: ${fire.size} acres</p>\n            <p style=\"margin: 2px 0;\">Containment: ${fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n            <p style=\"margin: 2px 0; color: ${getSeverityColorHex(fire.severity)}; font-weight: 600;\">\n              Severity: ${fire.severity}\n            </p>\n            <button onclick=\"window.selectFire('${fire.id}')\" style=\"\n              background: #3b82f6;\n              color: white;\n              border: none;\n              padding: 4px 8px;\n              border-radius: 4px;\n              margin-top: 8px;\n              cursor: pointer;\n              font-size: 12px;\n            \">View Prediction</button>\n          </div>\n        `).on('click', () => onFireClick(fire));\n      markersRef.current.push(marker);\n    });\n  }, [fires, onFireClick, addFirePolygons]);\n  useEffect(() => {\n    const loadLeaflet = async () => {\n      try {\n        // Adding CSS\n        if (!document.querySelector('link[href*=\"leaflet\"]')) {\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n          document.head.appendChild(link);\n        }\n\n        // Loading Leaflet\n        if (!window.L) {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n          script.onload = () => {\n            console.log('Leaflet loaded successfully');\n            // Wait for next tick to ensure DOM is ready\n            setTimeout(initializeMap, 0);\n          };\n          script.onerror = () => {\n            console.error('Failed to load Leaflet');\n          };\n          document.head.appendChild(script);\n        } else {\n          // Wait for next tick to ensure DOM is ready\n          setTimeout(initializeMap, 0);\n        }\n      } catch (error) {\n        console.error('Error loading Leaflet:', error);\n      }\n    };\n    const initializeMap = () => {\n      if (!mapRef.current || mapInstanceRef.current) return;\n\n      // Ensure the container has dimensions before initializing\n      if (mapRef.current.offsetWidth === 0 || mapRef.current.offsetHeight === 0) {\n        console.warn('Map container has no dimensions, retrying...');\n        setTimeout(initializeMap, 100);\n        return;\n      }\n      try {\n        const L = window.L;\n\n        // Initialize the map in San Francisco Bay Area with minimal options first\n        const map = L.map(mapRef.current, {\n          center: [37.7749, -122.4194],\n          zoom: 10,\n          zoomControl: false,\n          preferCanvas: true // Use canvas renderer for better performance\n        });\n\n        // Wait for map to be fully initialized before adding layers\n        map.whenReady(() => {\n          try {\n            // Add tile layer after map is ready\n            const tileLayer = L.tileLayer(getTileUrl(mapLayer), {\n              attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(map);\n            mapInstanceRef.current.tileLayer = tileLayer;\n\n            // Add markers when fires are loaded\n            if (fires.length > 0) {\n              addFireMarkers(map, L);\n            }\n            console.log('Map initialized successfully');\n          } catch (error) {\n            console.error('Error setting up map layers:', error);\n          }\n        });\n        mapInstanceRef.current = map;\n\n        // Map resizing with proper error handling - set up after map is created\n        if (resizeObserverRef.current) {\n          resizeObserverRef.current.disconnect();\n        }\n        resizeObserverRef.current = new ResizeObserver(() => {\n          // Add checks to ensure map and container are valid before invalidating size\n          if (mapInstanceRef.current && mapRef.current && mapInstanceRef.current.getContainer() && mapRef.current.offsetWidth > 0 && mapRef.current.offsetHeight > 0) {\n            // Use setTimeout to ensure DOM is fully updated\n            setTimeout(() => {\n              try {\n                if (mapInstanceRef.current && mapInstanceRef.current.getContainer()) {\n                  mapInstanceRef.current.invalidateSize();\n                }\n              } catch (error) {\n                console.warn('Error invalidating map size:', error);\n              }\n            }, 100);\n          }\n        });\n        resizeObserverRef.current.observe(mapRef.current);\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    };\n    loadLeaflet();\n    return () => {\n      // Cleanup resize observer\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.disconnect();\n        resizeObserverRef.current = null;\n      }\n\n      // Cleanup map\n      if (mapInstanceRef.current) {\n        try {\n          mapInstanceRef.current.off(); // Remove all event listeners\n          mapInstanceRef.current.remove();\n        } catch (error) {\n          console.warn('Error during map cleanup:', error);\n        }\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [fires.length, mapLayer, addFireMarkers]);\n\n  // Change tiles when map type changes\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current.tileLayer) {\n      const L = window.L;\n      mapInstanceRef.current.removeLayer(mapInstanceRef.current.tileLayer);\n      const newTileLayer = L.tileLayer(getTileUrl(mapLayer), {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstanceRef.current);\n      mapInstanceRef.current.tileLayer = newTileLayer;\n    }\n  }, [mapLayer]);\n\n  // Update markers when fires change\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && fires.length > 0) {\n      addFireMarkers(mapInstanceRef.current, window.L);\n    }\n  }, [fires, addFireMarkers]);\n\n  // Make selectFire global for popup buttons\n  useEffect(() => {\n    window.selectFire = fireId => {\n      const fire = fires.find(f => f.id === fireId);\n      if (fire) {\n        onFireClick(fire);\n      }\n    };\n    return () => {\n      delete window.selectFire;\n    };\n  }, [fires, onFireClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"w-full h-full\",\n    style: {\n      minHeight: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"99OypzVx+Y0+t/zUGnNYVni9PoU=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","getTileUrl","getIconSizeForSeverity","getSeverityBackgroundColor","getSeverityColorHex","jsxDEV","_jsxDEV","MapComponent","fires","mapLayer","onFireClick","_s","mapRef","mapInstanceRef","markersRef","polygonsRef","resizeObserverRef","addFirePolygons","map","L","fire","geometry","type","coords","coordinates","length","console","warn","name","leafletCoords","filter","coord","Array","isArray","isNaN","polygon","color","weight","opacity","fillColor","fillOpacity","addTo","current","push","forEach","polygonCoords","index","error","addFireMarkers","marker","removeLayer","iconConfig","severity","backgroundColor","fireIcon","divIcon","html","size","fontSize","className","iconSize","iconAnchor","popupAnchor","lat","lng","icon","bindPopup","containment","id","on","loadLeaflet","document","querySelector","link","createElement","rel","href","head","appendChild","window","script","src","onload","log","setTimeout","initializeMap","onerror","offsetWidth","offsetHeight","center","zoom","zoomControl","preferCanvas","whenReady","tileLayer","attribution","disconnect","ResizeObserver","getContainer","invalidateSize","observe","off","remove","newTileLayer","selectFire","fireId","find","f","ref","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/timothyha/firecast/frontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport { getTileUrl, getIconSizeForSeverity, getSeverityBackgroundColor, getSeverityColorHex } from '../utils/helpers';\n\nconst MapComponent = ({ fires, mapLayer, onFireClick }) => {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const polygonsRef = useRef([]);\n  const resizeObserverRef = useRef(null);\n\n  const addFirePolygons = useCallback((map, L, fire) => {\n    const { geometry } = fire;\n    \n    try {\n      if (geometry.type === 'Polygon') {\n        const coords = geometry.coordinates[0];\n        \n        if (!coords || coords.length < 3) {\n          console.warn('Invalid polygon coordinates for fire:', fire.name);\n          return;\n        }\n        \n        const leafletCoords = coords\n          .filter(coord => Array.isArray(coord) && coord.length >= 2 && \n                  typeof coord[0] === 'number' && typeof coord[1] === 'number' &&\n                  !isNaN(coord[0]) && !isNaN(coord[1]))\n          .map(coord => [coord[1], coord[0]]);\n        \n        if (leafletCoords.length < 3) {\n          console.warn('Not enough valid coordinates for polygon:', fire.name);\n          return;\n        }\n        \n        const polygon = L.polygon(leafletCoords, {\n          color: '#ef4444',\n          weight: 2,\n          opacity: 0.8,\n          fillColor: '#ef4444',\n          fillOpacity: 0.2\n        }).addTo(map);\n        \n        polygonsRef.current.push(polygon);\n        \n      } else if (geometry.type === 'MultiPolygon') {\n        geometry.coordinates.forEach((polygonCoords, index) => {\n          const coords = polygonCoords[0];\n\n          if (!coords || coords.length < 3) {\n            console.warn(`Invalid polygon coordinates for fire ${fire.name}, polygon ${index}`);\n            return;\n          }\n\n          const leafletCoords = coords\n            .filter(coord => Array.isArray(coord) && coord.length >= 2 && \n                    typeof coord[0] === 'number' && typeof coord[1] === 'number' && \n                    !isNaN(coord[0]) && !isNaN(coord[1]))\n            .map(coord => [coord[1], coord[0]]);\n          \n          if (leafletCoords.length < 3) {\n            console.warn(`Not enough valid coordinates for polygon ${index} of fire:`, fire.name);\n            return;\n          }\n          \n          const polygon = L.polygon(leafletCoords, {\n            color: '#ef4444',\n            weight: 2,\n            opacity: 0.8,\n            fillColor: '#ef4444',\n            fillOpacity: 0.2\n          }).addTo(map);\n          \n          polygonsRef.current.push(polygon);\n        });\n      }\n    } catch (error) {\n      console.error('Error adding fire polygon for', fire.name, ':', error);\n    }\n  }, []);\n\n  const addFireMarkers = useCallback((map, L) => {\n    // Clear existing markers and polygons\n    markersRef.current.forEach(marker => map.removeLayer(marker));\n    polygonsRef.current.forEach(polygon => map.removeLayer(polygon));\n    markersRef.current = [];\n    polygonsRef.current = [];\n\n    // Add markers for each fire\n    fires.forEach(fire => {\n      // Add polygon outlines\n      addFirePolygons(map, L, fire);\n      \n      // Get icon configuration based on severity\n      const iconConfig = getIconSizeForSeverity(fire.severity);\n      const backgroundColor = getSeverityBackgroundColor(fire.severity);\n      \n      // Create fire icon with dynamic sizing and color\n      const fireIcon = L.divIcon({\n        html: `<div style=\"\n          background: ${backgroundColor};\n          width: ${iconConfig.size}px;\n          height: ${iconConfig.size}px;\n          border-radius: 50%;\n          border: 3px solid white;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: ${iconConfig.fontSize};\n          cursor: pointer;\n        \">ðŸ”¥</div>`,\n        className: 'fire-marker',\n        iconSize: [iconConfig.size, iconConfig.size],\n        iconAnchor: [iconConfig.size / 2, iconConfig.size / 2],\n        popupAnchor: [0, -iconConfig.size / 2]\n      });\n      \n      // Add marker\n      const marker = L.marker([fire.lat, fire.lng], { icon: fireIcon })\n        .addTo(map)\n        .bindPopup(`\n          <div style=\"color: #374151; font-family: system-ui;\">\n            <h3 style=\"font-weight: bold; font-size: 16px; margin: 0 0 8px 0;\">${fire.name}</h3>\n            <p style=\"margin: 2px 0;\">Size: ${fire.size} acres</p>\n            <p style=\"margin: 2px 0;\">Containment: ${fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n            <p style=\"margin: 2px 0; color: ${getSeverityColorHex(fire.severity)}; font-weight: 600;\">\n              Severity: ${fire.severity}\n            </p>\n            <button onclick=\"window.selectFire('${fire.id}')\" style=\"\n              background: #3b82f6;\n              color: white;\n              border: none;\n              padding: 4px 8px;\n              border-radius: 4px;\n              margin-top: 8px;\n              cursor: pointer;\n              font-size: 12px;\n            \">View Prediction</button>\n          </div>\n        `)\n        .on('click', () => onFireClick(fire));\n\n      markersRef.current.push(marker);\n    });\n  }, [fires, onFireClick, addFirePolygons]);\n\n  useEffect(() => {\n    const loadLeaflet = async () => {\n      try {\n        // Adding CSS\n        if (!document.querySelector('link[href*=\"leaflet\"]')) {\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n          document.head.appendChild(link);\n        }\n\n        // Loading Leaflet\n        if (!window.L) {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n          script.onload = () => {\n            console.log('Leaflet loaded successfully');\n            // Wait for next tick to ensure DOM is ready\n            setTimeout(initializeMap, 0);\n          };\n          script.onerror = () => {\n            console.error('Failed to load Leaflet');\n          };\n          document.head.appendChild(script);\n        } else {\n          // Wait for next tick to ensure DOM is ready\n          setTimeout(initializeMap, 0);\n        }\n      } catch (error) {\n        console.error('Error loading Leaflet:', error);\n      }\n    };\n\n    const initializeMap = () => {\n      if (!mapRef.current || mapInstanceRef.current) return;\n\n      // Ensure the container has dimensions before initializing\n      if (mapRef.current.offsetWidth === 0 || mapRef.current.offsetHeight === 0) {\n        console.warn('Map container has no dimensions, retrying...');\n        setTimeout(initializeMap, 100);\n        return;\n      }\n\n      try {\n        const L = window.L;\n        \n        // Initialize the map in San Francisco Bay Area with minimal options first\n        const map = L.map(mapRef.current, {\n          center: [37.7749, -122.4194],\n          zoom: 10,\n          zoomControl: false,\n          preferCanvas: true // Use canvas renderer for better performance\n        });\n\n        // Wait for map to be fully initialized before adding layers\n        map.whenReady(() => {\n          try {\n            // Add tile layer after map is ready\n            const tileLayer = L.tileLayer(getTileUrl(mapLayer), {\n              attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(map);\n\n            mapInstanceRef.current.tileLayer = tileLayer;\n\n            // Add markers when fires are loaded\n            if (fires.length > 0) {\n              addFireMarkers(map, L);\n            }\n\n            console.log('Map initialized successfully');\n          } catch (error) {\n            console.error('Error setting up map layers:', error);\n          }\n        });\n\n        mapInstanceRef.current = map;\n\n        // Map resizing with proper error handling - set up after map is created\n        if (resizeObserverRef.current) {\n          resizeObserverRef.current.disconnect();\n        }\n        \n        resizeObserverRef.current = new ResizeObserver(() => {\n          // Add checks to ensure map and container are valid before invalidating size\n          if (mapInstanceRef.current && \n              mapRef.current && \n              mapInstanceRef.current.getContainer() && \n              mapRef.current.offsetWidth > 0 && \n              mapRef.current.offsetHeight > 0) {\n            \n            // Use setTimeout to ensure DOM is fully updated\n            setTimeout(() => {\n              try {\n                if (mapInstanceRef.current && mapInstanceRef.current.getContainer()) {\n                  mapInstanceRef.current.invalidateSize();\n                }\n              } catch (error) {\n                console.warn('Error invalidating map size:', error);\n              }\n            }, 100);\n          }\n        });\n        \n        resizeObserverRef.current.observe(mapRef.current);\n\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    };\n\n    loadLeaflet();\n\n    return () => {\n      // Cleanup resize observer\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.disconnect();\n        resizeObserverRef.current = null;\n      }\n      \n      // Cleanup map\n      if (mapInstanceRef.current) {\n        try {\n          mapInstanceRef.current.off(); // Remove all event listeners\n          mapInstanceRef.current.remove();\n        } catch (error) {\n          console.warn('Error during map cleanup:', error);\n        }\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [fires.length, mapLayer, addFireMarkers]);\n\n  // Change tiles when map type changes\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current.tileLayer) {\n      const L = window.L;\n      mapInstanceRef.current.removeLayer(mapInstanceRef.current.tileLayer);\n      \n      const newTileLayer = L.tileLayer(getTileUrl(mapLayer), {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstanceRef.current);\n\n      mapInstanceRef.current.tileLayer = newTileLayer;\n    }\n  }, [mapLayer]);\n\n  // Update markers when fires change\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && fires.length > 0) {\n      addFireMarkers(mapInstanceRef.current, window.L);\n    }\n  }, [fires, addFireMarkers]);\n\n  // Make selectFire global for popup buttons\n  useEffect(() => {\n    window.selectFire = (fireId) => {\n      const fire = fires.find(f => f.id === fireId);\n      if (fire) {\n        onFireClick(fire);\n      }\n    };\n    \n    return () => {\n      delete window.selectFire;\n    };\n  }, [fires, onFireClick]);\n\n  return (\n    <div \n      ref={mapRef} \n      className=\"w-full h-full\"\n      style={{ minHeight: '500px' }}\n    />\n  );\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}