{"ast":null,"code":"// Service to fetch perimeter prediction GeoJSON from the backend\nexport async function fetchPerimeterPredictions(){const response=await fetch('https://flameflux-production.up.railway.app/api/perimeter-predictions');if(!response.ok){throw new Error('Failed to fetch perimeter predictions');}// Debug: log the raw response text\nconst responseText=await response.text();console.log('Raw response from /api/perimeter-predictions:',responseText.substring(0,200)+'...');try{return JSON.parse(responseText);}catch(error){console.error('JSON parse error:',error);console.error('Response text:',responseText);throw error;}}","map":{"version":3,"names":["fetchPerimeterPredictions","response","fetch","ok","Error","responseText","text","console","log","substring","JSON","parse","error"],"sources":["/Users/timothyha/firecast/frontend/src/services/perimeterPredictionApi.js"],"sourcesContent":["// Service to fetch perimeter prediction GeoJSON from the backend\n\nexport async function fetchPerimeterPredictions() {\n  const response = await fetch('https://flameflux-production.up.railway.app/api/perimeter-predictions');\n  if (!response.ok) {\n    throw new Error('Failed to fetch perimeter predictions');\n  }\n\n  // Debug: log the raw response text\n  const responseText = await response.text();\n  console.log('Raw response from /api/perimeter-predictions:', responseText.substring(0, 200) + '...');\n\n  try {\n    return JSON.parse(responseText);\n  } catch (error) {\n    console.error('JSON parse error:', error);\n    console.error('Response text:', responseText);\n    throw error;\n  }\n} "],"mappings":"AAAA;AAEA,MAAO,eAAe,CAAAA,yBAAyBA,CAAA,CAAG,CAChD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uEAAuE,CAAC,CACrG,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uCAAuC,CAAC,CAC1D,CAEA;AACA,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAEH,YAAY,CAACI,SAAS,CAAC,CAAC,CAAE,GAAG,CAAC,CAAG,KAAK,CAAC,CAEpG,GAAI,CACF,MAAO,CAAAC,IAAI,CAACC,KAAK,CAACN,YAAY,CAAC,CACjC,CAAE,MAAOO,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzCL,OAAO,CAACK,KAAK,CAAC,gBAAgB,CAAEP,YAAY,CAAC,CAC7C,KAAM,CAAAO,KAAK,CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}