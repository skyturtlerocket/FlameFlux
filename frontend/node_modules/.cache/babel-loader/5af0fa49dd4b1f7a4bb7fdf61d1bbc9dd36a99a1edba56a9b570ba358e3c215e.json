{"ast":null,"code":"var _jsxFileName = \"/Users/timothyha/firecast/frontend/src/components/WildfireDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Header from './Header';\nimport MapComponent from './MapComponent';\nimport FireList from './FireList';\nimport PredictionPanel from './PredictionPanel';\nimport LayersControl from './LayersControl';\nimport { fetchFires } from '../services/fireApi';\nimport { fetchMODISData, fetchVIIRSData } from '../services/satelliteApi';\nimport { fetchPrediction } from '../services/fireApi';\nimport { fetchPerimeterPredictions } from '../services/perimeterPredictionApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WildfireDashboard = () => {\n  _s();\n  var _predictedPerimeterDa;\n  const mapRef = useRef();\n  // State management\n  const [fires, setFires] = useState([]);\n  const [selectedFire, setSelectedFire] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [mapLayer, setMapLayer] = useState('satellite');\n  const [dataError, setDataError] = useState(null);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [predictedPerimeterEnabled, setPredictedPerimeterEnabled] = useState(false);\n  const [predictedPerimeterData, setPredictedPerimeterData] = useState(null);\n\n  // Satellite data state\n  const [satelliteLayers, setSatelliteLayers] = useState({\n    viirs: {\n      enabled: true,\n      data: []\n    },\n    modis: {\n      enabled: true,\n      data: []\n    },\n    viewMode: 'markers' // 'markers' or 'heatmap'\n  });\n  const [isLoadingSatelliteData, setIsLoadingSatelliteData] = useState({\n    viirs: false,\n    modis: false\n  });\n  const loadFireData = useCallback(async () => {\n    try {\n      setIsLoadingData(true);\n      setDataError(null);\n      const realTimeFireData = await fetchFires();\n      setFires(realTimeFireData);\n      console.log('Fire data loaded successfully:', realTimeFireData.length, 'fires');\n    } catch (error) {\n      console.error('Failed to load real-time fire data:', error);\n      setDataError(error.message);\n      setFires([]);\n    } finally {\n      setIsLoadingData(false);\n    }\n  }, []);\n  const loadSatelliteData = useCallback(async () => {\n    try {\n      // Load VIIRS data\n      setIsLoadingSatelliteData(prev => ({\n        ...prev,\n        viirs: true\n      }));\n      const viirsData = await fetchVIIRSData();\n\n      // Load MODIS data\n      setIsLoadingSatelliteData(prev => ({\n        ...prev,\n        modis: true\n      }));\n      const modisData = await fetchMODISData();\n      setSatelliteLayers(prev => ({\n        ...prev,\n        viirs: {\n          ...prev.viirs,\n          data: viirsData\n        },\n        modis: {\n          ...prev.modis,\n          data: modisData\n        }\n      }));\n      console.log('Satellite data loaded successfully:', {\n        viirs: viirsData.length,\n        modis: modisData.length\n      });\n    } catch (error) {\n      console.error('Failed to load satellite data:', error);\n      // Don't set dataError for satellite data as it's supplementary\n    } finally {\n      setIsLoadingSatelliteData({\n        viirs: false,\n        modis: false\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // Fetch predicted perimeter GeoJSON on mount\n    fetchPerimeterPredictions().then(data => {\n      console.log('Predicted perimeter data loaded:', data);\n      setPredictedPerimeterData(data);\n    }).catch(err => {\n      console.error('Failed to fetch predicted perimeter data:', err);\n      setPredictedPerimeterData(null);\n    });\n  }, []);\n  const handlePredictedPerimeterToggle = () => {\n    setPredictedPerimeterEnabled(val => {\n      const newVal = !val;\n      console.log('Predicted perimeter toggle:', newVal);\n      return newVal;\n    });\n  };\n\n  // Load fire data on component mount\n  useEffect(() => {\n    loadFireData();\n    loadSatelliteData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty dependency array since these functions are stable\n\n  const handleFireClick = useCallback(async fire => {\n    console.log('handleFireClick called with:', fire);\n    setSelectedFire(fire);\n    setLoading(true);\n    setShowPrediction(true);\n\n    // Zoom to fire perimeter\n    if (fire && fire.geometry && mapRef.current && mapRef.current.zoomToFire) {\n      console.log('Attempting to zoom to fire:', fire.name);\n      mapRef.current.zoomToFire(fire);\n    } else {\n      console.log('No geometry found for fire or mapRef not ready:', fire);\n    }\n    try {\n      const predictionData = await fetchPrediction(fire.id, fire);\n      setPrediction(predictionData);\n    } catch (error) {\n      console.error('Failed to fetch prediction:', error);\n      setPrediction(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const refreshData = useCallback(async () => {\n    await Promise.all([loadFireData(), loadSatelliteData()]);\n  }, [loadFireData, loadSatelliteData]);\n\n  // Handle satellite layer toggle\n  const handleLayerToggle = useCallback(satellite => {\n    setSatelliteLayers(prev => ({\n      ...prev,\n      [satellite]: {\n        ...prev[satellite],\n        enabled: !prev[satellite].enabled\n      }\n    }));\n  }, []);\n\n  // Handle view mode change\n  const handleViewModeChange = useCallback(mode => {\n    setSatelliteLayers(prev => ({\n      ...prev,\n      viewMode: mode\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mapLayer: mapLayer,\n      setMapLayer: setMapLayer,\n      refreshData: refreshData,\n      isLoadingData: isLoadingData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 relative\",\n        children: [/*#__PURE__*/_jsxDEV(MapComponent, {\n          ref: mapRef,\n          fires: fires,\n          mapLayer: mapLayer,\n          onFireClick: handleFireClick,\n          satelliteLayers: satelliteLayers,\n          predictedPerimeterEnabled: predictedPerimeterEnabled,\n          predictedPerimeterData: predictedPerimeterData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FireList, {\n          fires: fires,\n          handleFireClick: handleFireClick,\n          isLoadingData: isLoadingData,\n          dataError: dataError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n          satelliteLayers: satelliteLayers,\n          onLayerToggle: handleLayerToggle,\n          onViewModeChange: handleViewModeChange,\n          isLoadingSatelliteData: isLoadingSatelliteData,\n          predictedPerimeterEnabled: predictedPerimeterEnabled,\n          onPredictedPerimeterToggle: handlePredictedPerimeterToggle,\n          predictedPerimeterCount: predictedPerimeterData === null || predictedPerimeterData === void 0 ? void 0 : (_predictedPerimeterDa = predictedPerimeterData.features) === null || _predictedPerimeterDa === void 0 ? void 0 : _predictedPerimeterDa.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PredictionPanel, {\n        showPrediction: showPrediction,\n        setShowPrediction: setShowPrediction,\n        loading: loading,\n        selectedFire: selectedFire,\n        prediction: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(WildfireDashboard, \"KF4M8c7aeWntGHyMJDEChXTy1Ec=\");\n_c = WildfireDashboard;\nexport default WildfireDashboard;\nvar _c;\n$RefreshReg$(_c, \"WildfireDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Header","MapComponent","FireList","PredictionPanel","LayersControl","fetchFires","fetchMODISData","fetchVIIRSData","fetchPrediction","fetchPerimeterPredictions","jsxDEV","_jsxDEV","WildfireDashboard","_s","_predictedPerimeterDa","mapRef","fires","setFires","selectedFire","setSelectedFire","prediction","setPrediction","loading","setLoading","showPrediction","setShowPrediction","mapLayer","setMapLayer","dataError","setDataError","isLoadingData","setIsLoadingData","predictedPerimeterEnabled","setPredictedPerimeterEnabled","predictedPerimeterData","setPredictedPerimeterData","satelliteLayers","setSatelliteLayers","viirs","enabled","data","modis","viewMode","isLoadingSatelliteData","setIsLoadingSatelliteData","loadFireData","realTimeFireData","console","log","length","error","message","loadSatelliteData","prev","viirsData","modisData","then","catch","err","handlePredictedPerimeterToggle","val","newVal","handleFireClick","fire","geometry","current","zoomToFire","name","predictionData","id","refreshData","Promise","all","handleLayerToggle","satellite","handleViewModeChange","mode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onFireClick","onLayerToggle","onViewModeChange","onPredictedPerimeterToggle","predictedPerimeterCount","features","_c","$RefreshReg$"],"sources":["/Users/timothyha/firecast/frontend/src/components/WildfireDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Header from './Header';\nimport MapComponent from './MapComponent';\nimport FireList from './FireList';\nimport PredictionPanel from './PredictionPanel';\nimport LayersControl from './LayersControl';\nimport { fetchFires } from '../services/fireApi';\nimport { fetchMODISData, fetchVIIRSData } from '../services/satelliteApi';\nimport { fetchPrediction } from '../services/fireApi';\nimport { fetchPerimeterPredictions } from '../services/perimeterPredictionApi';\n\nconst WildfireDashboard = () => {\n  const mapRef = useRef();\n  // State management\n  const [fires, setFires] = useState([]);\n  const [selectedFire, setSelectedFire] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [mapLayer, setMapLayer] = useState('satellite');\n  const [dataError, setDataError] = useState(null);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [predictedPerimeterEnabled, setPredictedPerimeterEnabled] = useState(false);\n  const [predictedPerimeterData, setPredictedPerimeterData] = useState(null);\n\n  // Satellite data state\n  const [satelliteLayers, setSatelliteLayers] = useState({\n    viirs: {\n      enabled: true,\n      data: []\n    },\n    modis: {\n      enabled: true,\n      data: []\n    },\n    viewMode: 'markers' // 'markers' or 'heatmap'\n  });\n\n  const [isLoadingSatelliteData, setIsLoadingSatelliteData] = useState({\n    viirs: false,\n    modis: false\n  });\n\n  const loadFireData = useCallback(async () => {\n    try {\n      setIsLoadingData(true);\n      setDataError(null);\n      const realTimeFireData = await fetchFires();\n      setFires(realTimeFireData);\n      console.log('Fire data loaded successfully:', realTimeFireData.length, 'fires');\n    } catch (error) {\n      console.error('Failed to load real-time fire data:', error);\n      setDataError(error.message);\n      setFires([]);\n    } finally {\n      setIsLoadingData(false);\n    }\n  }, []);\n\n  const loadSatelliteData = useCallback(async () => {\n    try {\n      // Load VIIRS data\n      setIsLoadingSatelliteData(prev => ({ ...prev, viirs: true }));\n      const viirsData = await fetchVIIRSData();\n      \n      // Load MODIS data\n      setIsLoadingSatelliteData(prev => ({ ...prev, modis: true }));\n      const modisData = await fetchMODISData();\n\n      setSatelliteLayers(prev => ({\n        ...prev,\n        viirs: {\n          ...prev.viirs,\n          data: viirsData\n        },\n        modis: {\n          ...prev.modis,\n          data: modisData\n        }\n      }));\n\n      console.log('Satellite data loaded successfully:', {\n        viirs: viirsData.length,\n        modis: modisData.length\n      });\n    } catch (error) {\n      console.error('Failed to load satellite data:', error);\n      // Don't set dataError for satellite data as it's supplementary\n    } finally {\n      setIsLoadingSatelliteData({\n        viirs: false,\n        modis: false\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    // Fetch predicted perimeter GeoJSON on mount\n    fetchPerimeterPredictions()\n      .then(data => {\n        console.log('Predicted perimeter data loaded:', data);\n        setPredictedPerimeterData(data);\n      })\n      .catch(err => {\n        console.error('Failed to fetch predicted perimeter data:', err);\n        setPredictedPerimeterData(null);\n      });\n  }, []);\n\n  const handlePredictedPerimeterToggle = () => {\n    setPredictedPerimeterEnabled(val => {\n      const newVal = !val;\n      console.log('Predicted perimeter toggle:', newVal);\n      return newVal;\n    });\n  };\n\n  // Load fire data on component mount\n  useEffect(() => {\n    loadFireData();\n    loadSatelliteData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty dependency array since these functions are stable\n\n  const handleFireClick = useCallback(async (fire) => {\n    console.log('handleFireClick called with:', fire);\n    setSelectedFire(fire);\n    setLoading(true);\n    setShowPrediction(true);\n    \n    // Zoom to fire perimeter\n    if (fire && fire.geometry && mapRef.current && mapRef.current.zoomToFire) {\n      console.log('Attempting to zoom to fire:', fire.name);\n      mapRef.current.zoomToFire(fire);\n    } else {\n      console.log('No geometry found for fire or mapRef not ready:', fire);\n    }\n    \n    try {\n      const predictionData = await fetchPrediction(fire.id, fire);\n      setPrediction(predictionData);\n    } catch (error) {\n      console.error('Failed to fetch prediction:', error);\n      setPrediction(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n\n\n  const refreshData = useCallback(async () => {\n    await Promise.all([\n      loadFireData(),\n      loadSatelliteData()\n    ]);\n  }, [loadFireData, loadSatelliteData]);\n\n  // Handle satellite layer toggle\n  const handleLayerToggle = useCallback((satellite) => {\n    setSatelliteLayers(prev => ({\n      ...prev,\n      [satellite]: {\n        ...prev[satellite],\n        enabled: !prev[satellite].enabled\n      }\n    }));\n  }, []);\n\n  // Handle view mode change\n  const handleViewModeChange = useCallback((mode) => {\n    setSatelliteLayers(prev => ({\n      ...prev,\n      viewMode: mode\n    }));\n  }, []);\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-900 text-white\">\n      <Header \n        mapLayer={mapLayer}\n        setMapLayer={setMapLayer}\n        refreshData={refreshData}\n        isLoadingData={isLoadingData}\n      />\n\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Map section */}\n        <div className=\"flex-1 relative\">\n          <MapComponent \n            ref={mapRef}\n            fires={fires}\n            mapLayer={mapLayer}\n            onFireClick={handleFireClick}\n            satelliteLayers={satelliteLayers}\n            predictedPerimeterEnabled={predictedPerimeterEnabled}\n            predictedPerimeterData={predictedPerimeterData}\n          />\n          \n          <FireList \n            fires={fires}\n            handleFireClick={handleFireClick}\n            isLoadingData={isLoadingData}\n            dataError={dataError}\n          />\n\n          {/* Layers Control */}\n          <LayersControl\n            satelliteLayers={satelliteLayers}\n            onLayerToggle={handleLayerToggle}\n            onViewModeChange={handleViewModeChange}\n            isLoadingSatelliteData={isLoadingSatelliteData}\n            predictedPerimeterEnabled={predictedPerimeterEnabled}\n            onPredictedPerimeterToggle={handlePredictedPerimeterToggle}\n            predictedPerimeterCount={predictedPerimeterData?.features?.length}\n          />\n        </div>\n\n        {/* Prediction panel */}\n        <PredictionPanel \n          showPrediction={showPrediction}\n          setShowPrediction={setShowPrediction}\n          loading={loading}\n          selectedFire={selectedFire}\n          prediction={prediction}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default WildfireDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}