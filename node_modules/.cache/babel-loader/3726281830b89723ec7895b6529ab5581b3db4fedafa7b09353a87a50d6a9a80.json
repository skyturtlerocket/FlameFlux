{"ast":null,"code":"var _jsxFileName = \"/Users/timothyha/firecast/src/WildfireDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Flame, AlertTriangle, Calendar, Thermometer, Wind, Eye, X, RefreshCw } from 'lucide-react';\n\n// ========================================================================================================================================\n// Sample fire data\n// ========================================================================================================================================\n// We would realistically import fire data through JSON, this example is in JSON format right now\n// ========================================================================================================================================\n// Real-time fire data fetching and processing\n// ========================================================================================================================================\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculatePolygonCenter = (coordinates, geomType) => {\n  let allCoords = [];\n  if (geomType === \"Polygon\") {\n    allCoords = coordinates[0]; // outer ring\n  } else if (geomType === \"MultiPolygon\") {\n    for (let polygon of coordinates) {\n      allCoords = allCoords.concat(polygon[0]); // outer ring of each polygon\n    }\n  }\n  if (allCoords.length === 0) return null;\n\n  // Simple centroid calculation\n  const lngSum = allCoords.reduce((sum, coord) => sum + coord[0], 0);\n  const latSum = allCoords.reduce((sum, coord) => sum + coord[1], 0);\n  return {\n    lng: lngSum / allCoords.length,\n    lat: latSum / allCoords.length\n  };\n};\nconst getSeverityFromSize = acres => {\n  if (acres >= 10000) return \"High\";\n  if (acres >= 1000) return \"Medium\";\n  return \"Low\";\n};\nconst formatEpochToDateTime = epochMs => {\n  if (!epochMs) return null;\n  const date = new Date(epochMs);\n  return date.toISOString();\n};\nconst getLatestFiresByName = features => {\n  const fireMap = new Map();\n  features.forEach(feature => {\n    const name = feature.properties.incident_name || feature.properties.id || 'Unknown';\n    const dateMs = feature.properties.poly_DateCurrent || 0;\n    if (!fireMap.has(name) || dateMs > fireMap.get(name).properties.poly_DateCurrent) {\n      fireMap.set(name, feature);\n    }\n  });\n  return Array.from(fireMap.values());\n};\nconst fetchRealTimeFireData = async () => {\n  var _data$features;\n  const apiUrl = \"https://rdipowerplatformfd-e5hhgqaahef7fbdr.a02.azurefd.net/incidents/perimeters-gj.json\";\n  console.log(\"Fetching real-time fire data...\");\n  const response = await fetch(apiUrl, {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  const data = await response.json();\n  if (!data || data.type !== 'FeatureCollection') {\n    throw new Error('Invalid data format - expected FeatureCollection');\n  }\n  console.log(`Processing ${((_data$features = data.features) === null || _data$features === void 0 ? void 0 : _data$features.length) || 0} fire features...`);\n  if (!data.features || data.features.length === 0) {\n    console.log('No fire features found in API response');\n    return [];\n  }\n\n  // Filter to get only the latest fire by name\n  const latestFeatures = getLatestFiresByName(data.features);\n  console.log(`Filtered to ${latestFeatures.length} latest fires`);\n  const processedFires = latestFeatures.map((feature, index) => {\n    const {\n      geometry,\n      properties\n    } = feature;\n\n    // Validate geometry\n    if (!geometry || !geometry.coordinates) {\n      console.warn(`Skipping feature ${index + 1}: No valid geometry`);\n      return null;\n    }\n\n    // Calculate center point\n    const center = calculatePolygonCenter(geometry.coordinates, geometry.type);\n    if (!center) {\n      console.warn(`Skipping feature ${index + 1}: No valid coordinates`);\n      return null;\n    }\n\n    // Extract properties\n    const name = properties.incident_name || properties.id || `Fire_${index + 1}`;\n    const size = Math.round(properties.area_acres) || 0;\n    const severity = getSeverityFromSize(size);\n    const lastUpdate = formatEpochToDateTime(properties.poly_DateCurrent);\n    return {\n      id: properties.id || `fire_${index + 1}`,\n      name: name,\n      lat: center.lat,\n      lng: center.lng,\n      size: size,\n      containment: properties.containment || null,\n      severity: severity,\n      lastUpdate: lastUpdate,\n      weather: null,\n      // Will be implemented later\n      geometry: geometry // Store the geometry for polygon rendering\n    };\n  }).filter(fire => fire !== null); // Remove any null entries\n\n  console.log(`Successfully processed ${processedFires.length} fires`);\n  return processedFires;\n};\n\n// where the dashboard code starts\nconst WildfireDashboard = () => {\n  _s();\n  //stuff with ui states\n  const [fires, setFires] = useState([]);\n  const [selectedFire, setSelectedFire] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [mapLayer, setMapLayer] = useState('satellite');\n  const [dataError, setDataError] = useState(null);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const polygonsRef = useRef([]);\n  useEffect(() => {\n    // Load real-time fire data when component mounts\n    const loadFireData = async () => {\n      try {\n        setIsLoadingData(true);\n        setDataError(null);\n        const realTimeFireData = await fetchRealTimeFireData();\n        setFires(realTimeFireData);\n        console.log('Fire data loaded successfully:', realTimeFireData.length, 'fires');\n      } catch (error) {\n        console.error('Failed to load real-time fire data:', error);\n        setDataError(error.message);\n        setFires([]); // Set empty array on error\n      } finally {\n        setIsLoadingData(false);\n      }\n    };\n    loadFireData();\n\n    // loading leaflet and css\n    const loadLeaflet = async () => {\n      try {\n        // adding css\n        if (!document.querySelector('link[href*=\"leaflet\"]')) {\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n          document.head.appendChild(link);\n        }\n\n        // loading leaflet\n        if (!window.L) {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n          script.onload = () => {\n            console.log('Leaflet loaded successfully');\n            initializeMap();\n          };\n          script.onerror = () => {\n            console.error('Failed to load Leaflet');\n          };\n          document.head.appendChild(script);\n        } else {\n          initializeMap();\n        }\n      } catch (error) {\n        console.error('Error loading Leaflet:', error);\n      }\n    };\n\n    //starting the map for the user\n    const initializeMap = () => {\n      if (!mapRef.current || mapInstanceRef.current) return;\n      try {\n        const L = window.L;\n\n        // Initialize the map to be in San Francisco Bay Area\n        // we could use the user's location in real production, but this is just a default location\n        const map = L.map(mapRef.current, {\n          center: [37.7749, -122.4194],\n          zoom: 10,\n          zoomControl: false\n        });\n\n        // add tile layers because leaflet doesn't have satellite on default\n        const getTileUrl = layer => {\n          switch (layer) {\n            case 'satellite':\n              //satellite\n              return 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\n            case 'terrain':\n              //terrain map\n              return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n            default:\n              //normal\n              return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n          }\n        };\n\n        // credits to open street map\n        const tileLayer = L.tileLayer(getTileUrl(mapLayer), {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n\n        // references\n        mapInstanceRef.current = map;\n        mapInstanceRef.current.tileLayer = tileLayer;\n\n        // add the markers when fires are loaded\n        if (fires.length > 0) {\n          addFireMarkers(map, L);\n        }\n\n        // map resizing\n        const resizeObserver = new ResizeObserver(() => {\n          map.invalidateSize();\n        });\n        resizeObserver.observe(mapRef.current);\n        console.log('Map initialized successfully');\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    };\n    loadLeaflet();\n\n    // actually display ts\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  // change the tiles when the map type changes\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current.tileLayer) {\n      const L = window.L;\n      mapInstanceRef.current.removeLayer(mapInstanceRef.current.tileLayer);\n      const getTileUrl = layer => {\n        switch (layer) {\n          case 'satellite':\n            return 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\n          case 'terrain':\n            return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n          default:\n            return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        }\n      };\n      const newTileLayer = L.tileLayer(getTileUrl(mapLayer), {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstanceRef.current);\n      mapInstanceRef.current.tileLayer = newTileLayer;\n    }\n  }, [mapLayer]);\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && fires.length > 0) {\n      addFireMarkers(mapInstanceRef.current, window.L);\n    }\n  }, [fires]);\n  const addFirePolygons = (map, L, fire) => {\n    const {\n      geometry\n    } = fire;\n    try {\n      if (geometry.type === 'Polygon') {\n        // For Polygon: coordinates[0] is the outer ring\n        const coords = geometry.coordinates[0];\n\n        // Validate coordinates array\n        if (!coords || coords.length < 3) {\n          console.warn('Invalid polygon coordinates for fire:', fire.name);\n          return;\n        }\n\n        // Convert [lng, lat] to [lat, lng] and filter out invalid coordinates\n        const leafletCoords = coords.filter(coord => Array.isArray(coord) && coord.length >= 2 && typeof coord[0] === 'number' && typeof coord[1] === 'number' && !isNaN(coord[0]) && !isNaN(coord[1])).map(coord => [coord[1], coord[0]]);\n        if (leafletCoords.length < 3) {\n          console.warn('Not enough valid coordinates for polygon:', fire.name);\n          return;\n        }\n        const polygon = L.polygon(leafletCoords, {\n          color: '#ef4444',\n          weight: 2,\n          opacity: 0.8,\n          fillColor: '#ef4444',\n          fillOpacity: 0.2\n        }).addTo(map);\n        polygonsRef.current.push(polygon);\n      } else if (geometry.type === 'MultiPolygon') {\n        geometry.coordinates.forEach((polygonCoords, index) => {\n          const coords = polygonCoords[0]; // outer ring\n\n          if (!coords || coords.length < 3) {\n            console.warn(`Invalid polygon coordinates for fire ${fire.name}, polygon ${index}`);\n            return;\n          }\n\n          // Convert [lng, lat] to [lat, lng] and filter out invalid coordinates\n          const leafletCoords = coords.filter(coord => Array.isArray(coord) && coord.length >= 2 && typeof coord[0] === 'number' && typeof coord[1] === 'number' && !isNaN(coord[0]) && !isNaN(coord[1])).map(coord => [coord[1], coord[0]]);\n          if (leafletCoords.length < 3) {\n            console.warn(`Not enough valid coordinates for polygon ${index} of fire:`, fire.name);\n            return;\n          }\n          const polygon = L.polygon(leafletCoords, {\n            color: '#ef4444',\n            weight: 2,\n            opacity: 0.8,\n            fillColor: '#ef4444',\n            fillOpacity: 0.2\n          }).addTo(map);\n          polygonsRef.current.push(polygon);\n        });\n      }\n    } catch (error) {\n      console.error('Error adding fire polygon for', fire.name, ':', error);\n    }\n  };\n  const getIconSizeForSeverity = severity => {\n    switch (severity) {\n      case 'High':\n        return {\n          size: 36,\n          fontSize: '18px'\n        };\n      case 'Medium':\n        return {\n          size: 32,\n          fontSize: '16px'\n        };\n      case 'Low':\n      default:\n        return {\n          size: 28,\n          fontSize: '14px'\n        };\n    }\n  };\n  const addFireMarkers = (map, L) => {\n    try {\n      // clearing markers and polygons\n      markersRef.current.forEach(marker => map.removeLayer(marker));\n      polygonsRef.current.forEach(polygon => map.removeLayer(polygon));\n      markersRef.current = [];\n      polygonsRef.current = [];\n\n      // markers for the fire\n      fires.forEach(fire => {\n        // Add polygon outlines\n        addFirePolygons(map, L, fire);\n\n        // Get icon size based on severity\n        const iconConfig = getIconSizeForSeverity(fire.severity);\n\n        // fire icon with dynamic sizing\n        const fireIcon = L.divIcon({\n          html: `<div style=\"\n            background: linear-gradient(45deg, #ef4444, #f97316);\n            width: ${iconConfig.size}px;\n            height: ${iconConfig.size}px;\n            border-radius: 50%;\n            border: 3px solid white;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: ${iconConfig.fontSize};\n            cursor: pointer;\n          \">🔥</div>`,\n          className: 'fire-marker',\n          iconSize: [iconConfig.size, iconConfig.size],\n          iconAnchor: [iconConfig.size / 2, iconConfig.size / 2],\n          popupAnchor: [0, -iconConfig.size / 2]\n        });\n\n        // Add marker\n        const marker = L.marker([fire.lat, fire.lng], {\n          icon: fireIcon\n        }).addTo(map).bindPopup(`\n            <div style=\"color: #374151; font-family: system-ui;\">\n              <h3 style=\"font-weight: bold; font-size: 16px; margin: 0 0 8px 0;\">${fire.name}</h3>\n              <p style=\"margin: 2px 0;\">Size: ${fire.size} acres</p>\n              <p style=\"margin: 2px 0;\">Containment: ${fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n              <p style=\"margin: 2px 0; color: ${getSeverityColorHex(fire.severity)}; font-weight: 600;\">\n                Severity: ${fire.severity}\n              </p>\n              <button onclick=\"window.selectFire('${fire.id}')\" style=\"\n                background: #3b82f6;\n                color: white;\n                border: none;\n                padding: 4px 8px;\n                border-radius: 4px;\n                margin-top: 8px;\n                cursor: pointer;\n                font-size: 12px;\n              \">View Prediction</button>\n            </div>\n          `).on('click', () => handleFireClick(fire));\n        markersRef.current.push(marker);\n      });\n    } catch (error) {\n      console.error('Error adding fire markers:', error);\n    }\n  };\n\n  // make it global\n  useEffect(() => {\n    window.selectFire = fireId => {\n      const fire = fires.find(f => f.id === fireId);\n      if (fire) {\n        handleFireClick(fire);\n      }\n    };\n    return () => {\n      delete window.selectFire;\n    };\n  }, [fires]);\n  const getSeverityColorHex = severity => {\n    switch (severity) {\n      case 'High':\n        return '#ef4444';\n      case 'Medium':\n        return '#f97316';\n      case 'Low':\n        return '#eab308';\n      default:\n        return '#6b7280';\n    }\n  };\n\n  // ========================================================================================================================================\n  // This is where you would get the predictions from the model\n  // ========================================================================================================================================\n  const fetchPrediction = async (fireId, fireData) => {\n    if (!fireData) {\n      console.error('No fire data provided');\n      return;\n    }\n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    // some mock data, we would import this from the model in production\n    const mockPrediction = {\n      fireId: fireId,\n      predictionDate: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      estimatedSize: fireData.size * (1.2 + Math.random() * 0.8),\n      confidence: Math.floor(Math.random() * 20) + 75,\n      riskLevel: Math.random() > 0.5 ? 'High' : 'Critical',\n      perimeter: [[fireData.lat + 0.01, fireData.lng + 0.01], [fireData.lat + 0.02, fireData.lng + 0.005], [fireData.lat + 0.015, fireData.lng - 0.01], [fireData.lat - 0.005, fireData.lng - 0.015], [fireData.lat - 0.01, fireData.lng + 0.005]]\n    };\n    // then we display the predictions into the UI\n    setPrediction(mockPrediction);\n    setShowPrediction(true);\n    setLoading(false);\n  };\n  const handleFireClick = fire => {\n    setSelectedFire(fire);\n    fetchPrediction(fire.id, fire);\n  };\n\n  // this is in the text when showing the severity of the fire\n  const getSeverityColor = severity => {\n    switch (severity) {\n      case 'High':\n        return 'text-red-400';\n      case 'Medium':\n        return 'text-orange-400';\n      case 'Low':\n        return 'text-yellow-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n\n  // the date\n  const formatDate = isoString => {\n    if (!isoString) return 'N/A';\n    return new Date(isoString).toLocaleString();\n  };\n  const refreshData = async () => {\n    try {\n      setIsLoadingData(true);\n      setDataError(null);\n      const realTimeFireData = await fetchRealTimeFireData();\n      setFires(realTimeFireData);\n      console.log('Data refreshed successfully');\n    } catch (error) {\n      console.error('Failed to refresh data:', error);\n      setDataError(error.message);\n    } finally {\n      setIsLoadingData(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-gray-800 p-4 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(Flame, {\n            className: \"h-8 w-8 text-orange-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold\",\n            children: \"Wildfire Prediction Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: mapLayer,\n            onChange: e => setMapLayer(e.target.value),\n            className: \"bg-gray-700 text-white px-3 py-2 rounded-lg border border-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"satellite\",\n              children: \"Satellite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"terrain\",\n              children: \"Terrain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"standard\",\n              children: \"Standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: refreshData,\n            disabled: isLoadingData,\n            className: \"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-lg flex items-center space-x-2 disabled:opacity-50\",\n            children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: `h-4 w-4 ${isLoadingData ? 'animate-spin' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: mapRef,\n          className: \"w-full h-full\",\n          style: {\n            minHeight: '500px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 left-4 bg-gray-800 bg-opacity-95 backdrop-blur-sm rounded-lg p-4 shadow-xl max-w-sm z-[1000] border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mb-3 flex items-center text-white\",\n            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n              className: \"h-5 w-5 mr-2 text-orange-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this), \"Active Fires (\", fires.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), isLoadingData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-orange-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-sm\",\n              children: \"Loading fire data...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 15\n          }, this), dataError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-900 bg-opacity-50 p-3 rounded-lg mb-3 border border-red-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-red-200\",\n              children: [\"API Error: \", dataError]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-red-300 mt-1\",\n              children: \"Using demo data. Check console for details.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2 max-h-48 overflow-y-auto\",\n            children: fires.map(fire => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-700 bg-opacity-90 p-3 rounded-lg cursor-pointer hover:bg-gray-600 hover:bg-opacity-95 transition-all duration-200 border border-gray-600\",\n              onClick: () => handleFireClick(fire),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-semibold text-white\",\n                    children: fire.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-200\",\n                    children: [fire.size, \" acres\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-300\",\n                    children: [\"Containment: \", fire.containment ? `${fire.containment}%` : 'N/A']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right ml-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-sm font-medium ${getSeverityColor(fire.severity)}`,\n                    children: fire.severity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-400 mt-1\",\n                    children: \"Click for prediction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this)\n            }, fire.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this), showPrediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-96 bg-gray-800 p-6 overflow-y-auto shadow-xl border-l border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold\",\n            children: \"Fire Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPrediction(false),\n            className: \"text-gray-400 hover:text-white transition-colors\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-32\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-orange-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: \"Generating prediction...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 15\n        }, this) : selectedFire && prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-lg mb-2\",\n              children: selectedFire.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 gap-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Size: \", selectedFire.size, \" acres\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Containment: \", selectedFire.containment ? `${selectedFire.containment}%` : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getSeverityColor(selectedFire.severity),\n                children: [\"Severity: \", selectedFire.severity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Updated: \", formatDate(selectedFire.lastUpdate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 19\n          }, this), selectedFire.weather && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold mb-2 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 25\n              }, this), \"Current Weather\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 gap-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Temperature: \", selectedFire.weather.temperature, \"\\xB0F\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Humidity: \", selectedFire.weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Wind, {\n                  className: \"h-3 w-3 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 27\n                }, this), \"Wind: \", selectedFire.weather.windSpeed, \" mph \", selectedFire.weather.windDirection]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-900 bg-opacity-50 p-4 rounded-lg border border-red-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold mb-2 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 23\n              }, this), \"24-Hour Prediction\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Estimated Size: \", Math.round(prediction.estimatedSize), \" acres\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Growth: +\", Math.round(prediction.estimatedSize - selectedFire.size), \" acres\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Risk Level: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-red-400 font-semibold\",\n                  children: prediction.riskLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Confidence: \", prediction.confidence, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Prediction Date: \", formatDate(prediction.predictionDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 5\n  }, this);\n};\n_s(WildfireDashboard, \"kUuoy1UYhd7WDieTswwkEGMiC7c=\");\n_c = WildfireDashboard;\nexport default WildfireDashboard;\nvar _c;\n$RefreshReg$(_c, \"WildfireDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Flame","AlertTriangle","Calendar","Thermometer","Wind","Eye","X","RefreshCw","jsxDEV","_jsxDEV","calculatePolygonCenter","coordinates","geomType","allCoords","polygon","concat","length","lngSum","reduce","sum","coord","latSum","lng","lat","getSeverityFromSize","acres","formatEpochToDateTime","epochMs","date","Date","toISOString","getLatestFiresByName","features","fireMap","Map","forEach","feature","name","properties","incident_name","id","dateMs","poly_DateCurrent","has","get","set","Array","from","values","fetchRealTimeFireData","_data$features","apiUrl","console","log","response","fetch","method","mode","headers","ok","Error","status","data","json","type","latestFeatures","processedFires","map","index","geometry","warn","center","size","Math","round","area_acres","severity","lastUpdate","containment","weather","filter","fire","WildfireDashboard","_s","fires","setFires","selectedFire","setSelectedFire","prediction","setPrediction","loading","setLoading","showPrediction","setShowPrediction","mapLayer","setMapLayer","dataError","setDataError","isLoadingData","setIsLoadingData","mapRef","mapInstanceRef","markersRef","polygonsRef","loadFireData","realTimeFireData","error","message","loadLeaflet","document","querySelector","link","createElement","rel","href","head","appendChild","window","L","script","src","onload","initializeMap","onerror","current","zoom","zoomControl","getTileUrl","layer","tileLayer","attribution","addTo","addFireMarkers","resizeObserver","ResizeObserver","invalidateSize","observe","remove","removeLayer","newTileLayer","addFirePolygons","coords","leafletCoords","isArray","isNaN","color","weight","opacity","fillColor","fillOpacity","push","polygonCoords","getIconSizeForSeverity","fontSize","marker","iconConfig","fireIcon","divIcon","html","className","iconSize","iconAnchor","popupAnchor","icon","bindPopup","getSeverityColorHex","on","handleFireClick","selectFire","fireId","find","f","fetchPrediction","fireData","Promise","resolve","setTimeout","mockPrediction","predictionDate","now","estimatedSize","random","confidence","floor","riskLevel","perimeter","getSeverityColor","formatDate","isoString","toLocaleString","refreshData","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","disabled","ref","style","minHeight","temperature","humidity","windSpeed","windDirection","_c","$RefreshReg$"],"sources":["/Users/timothyha/firecast/src/WildfireDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Flame, AlertTriangle, Calendar, Thermometer, Wind, Eye, X, RefreshCw } from 'lucide-react';\n\n// ========================================================================================================================================\n// Sample fire data\n// ========================================================================================================================================\n// We would realistically import fire data through JSON, this example is in JSON format right now\n// ========================================================================================================================================\n// Real-time fire data fetching and processing\n// ========================================================================================================================================\n\nconst calculatePolygonCenter = (coordinates, geomType) => {\n  let allCoords = [];\n  \n  if (geomType === \"Polygon\") {\n    allCoords = coordinates[0]; // outer ring\n  } else if (geomType === \"MultiPolygon\") {\n    for (let polygon of coordinates) {\n      allCoords = allCoords.concat(polygon[0]); // outer ring of each polygon\n    }\n  }\n  \n  if (allCoords.length === 0) return null;\n  \n  // Simple centroid calculation\n  const lngSum = allCoords.reduce((sum, coord) => sum + coord[0], 0);\n  const latSum = allCoords.reduce((sum, coord) => sum + coord[1], 0);\n  \n  return {\n    lng: lngSum / allCoords.length,\n    lat: latSum / allCoords.length\n  };\n};\n\nconst getSeverityFromSize = (acres) => {\n  if (acres >= 10000) return \"High\";\n  if (acres >= 1000) return \"Medium\";\n  return \"Low\";\n};\n\nconst formatEpochToDateTime = (epochMs) => {\n  if (!epochMs) return null;\n  const date = new Date(epochMs);\n  return date.toISOString();\n};\n\nconst getLatestFiresByName = (features) => {\n  const fireMap = new Map();\n  \n  features.forEach(feature => {\n    const name = feature.properties.incident_name || feature.properties.id || 'Unknown';\n    const dateMs = feature.properties.poly_DateCurrent || 0;\n    \n    if (!fireMap.has(name) || dateMs > fireMap.get(name).properties.poly_DateCurrent) {\n      fireMap.set(name, feature);\n    }\n  });\n  \n  return Array.from(fireMap.values());\n};\n\nconst fetchRealTimeFireData = async () => {\n  const apiUrl = \"https://rdipowerplatformfd-e5hhgqaahef7fbdr.a02.azurefd.net/incidents/perimeters-gj.json\";\n\n    console.log(\"Fetching real-time fire data...\");\n  \n    const response = await fetch(apiUrl, {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    \n    if (!data || data.type !== 'FeatureCollection') {\n      throw new Error('Invalid data format - expected FeatureCollection');\n    }\n    \n    console.log(`Processing ${data.features?.length || 0} fire features...`);\n    \n    if (!data.features || data.features.length === 0) {\n      console.log('No fire features found in API response');\n      return [];\n    }\n    \n    // Filter to get only the latest fire by name\n    const latestFeatures = getLatestFiresByName(data.features);\n    console.log(`Filtered to ${latestFeatures.length} latest fires`);\n    \n    const processedFires = latestFeatures.map((feature, index) => {\n    const { geometry, properties } = feature;\n    \n    // Validate geometry\n    if (!geometry || !geometry.coordinates) {\n      console.warn(`Skipping feature ${index + 1}: No valid geometry`);\n      return null;\n    }\n    \n    // Calculate center point\n    const center = calculatePolygonCenter(geometry.coordinates, geometry.type);\n    if (!center) {\n      console.warn(`Skipping feature ${index + 1}: No valid coordinates`);\n      return null;\n    }\n    \n    // Extract properties\n    const name = properties.incident_name || properties.id || `Fire_${index + 1}`;\n    const size = Math.round(properties.area_acres) || 0;\n    const severity = getSeverityFromSize(size);\n    const lastUpdate = formatEpochToDateTime(properties.poly_DateCurrent);\n    \n    return {\n      id: properties.id || `fire_${index + 1}`,\n      name: name,\n      lat: center.lat,\n      lng: center.lng,\n      size: size,\n      containment: properties.containment || null,\n      severity: severity,\n      lastUpdate: lastUpdate,\n      weather: null, // Will be implemented later\n      geometry: geometry // Store the geometry for polygon rendering\n    };\n  }).filter(fire => fire !== null); // Remove any null entries\n  \n  console.log(`Successfully processed ${processedFires.length} fires`);\n  return processedFires;\n};\n\n// where the dashboard code starts\nconst WildfireDashboard = () => {\n  //stuff with ui states\n  const [fires, setFires] = useState([]);\n  const [selectedFire, setSelectedFire] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [mapLayer, setMapLayer] = useState('satellite');\n  const [dataError, setDataError] = useState(null);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const polygonsRef = useRef([]);\n\n  useEffect(() => {\n    // Load real-time fire data when component mounts\n    const loadFireData = async () => {\n      try {\n        setIsLoadingData(true);\n        setDataError(null);\n        const realTimeFireData = await fetchRealTimeFireData();\n        setFires(realTimeFireData);\n        console.log('Fire data loaded successfully:', realTimeFireData.length, 'fires');\n      } catch (error) {\n        console.error('Failed to load real-time fire data:', error);\n        setDataError(error.message);\n        setFires([]); // Set empty array on error\n      } finally {\n        setIsLoadingData(false);\n      }\n    };\n  \n    loadFireData();\n    \n    // loading leaflet and css\n    const loadLeaflet = async () => {\n      try {\n        // adding css\n        if (!document.querySelector('link[href*=\"leaflet\"]')) {\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n          document.head.appendChild(link);\n        }\n\n        // loading leaflet\n        if (!window.L) {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n          script.onload = () => {\n            console.log('Leaflet loaded successfully');\n            initializeMap();\n          };\n          script.onerror = () => {\n            console.error('Failed to load Leaflet');\n          };\n          document.head.appendChild(script);\n        } else {\n          initializeMap();\n        }\n      } catch (error) {\n        console.error('Error loading Leaflet:', error);\n      }\n    };\n    \n    //starting the map for the user\n    const initializeMap = () => {\n      if (!mapRef.current || mapInstanceRef.current) return;\n\n      try {\n        const L = window.L;\n        \n        // Initialize the map to be in San Francisco Bay Area\n        // we could use the user's location in real production, but this is just a default location\n        const map = L.map(mapRef.current, {\n          center: [37.7749, -122.4194],\n          zoom: 10,\n          zoomControl: false\n        });\n\n        // add tile layers because leaflet doesn't have satellite on default\n        const getTileUrl = (layer) => {\n          switch (layer) {\n            case 'satellite': //satellite\n              return 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\n            case 'terrain': //terrain map\n              return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n            default: //normal\n              return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n          }\n        };\n        \n        // credits to open street map\n        const tileLayer = L.tileLayer(getTileUrl(mapLayer), {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n\n        // references\n        mapInstanceRef.current = map;\n        mapInstanceRef.current.tileLayer = tileLayer;\n\n        // add the markers when fires are loaded\n        if (fires.length > 0) {\n          addFireMarkers(map, L);\n        }\n\n        // map resizing\n        const resizeObserver = new ResizeObserver(() => {\n          map.invalidateSize();\n        });\n        resizeObserver.observe(mapRef.current);\n\n        console.log('Map initialized successfully');\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    };\n\n    loadLeaflet();\n    \n    // actually display ts\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  // change the tiles when the map type changes\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current.tileLayer) {\n      const L = window.L;\n      mapInstanceRef.current.removeLayer(mapInstanceRef.current.tileLayer);\n      \n      const getTileUrl = (layer) => {\n        switch (layer) {\n          case 'satellite':\n            return 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';\n          case 'terrain':\n            return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n          default:\n            return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        }\n      };\n\n      const newTileLayer = L.tileLayer(getTileUrl(mapLayer), {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstanceRef.current);\n\n      mapInstanceRef.current.tileLayer = newTileLayer;\n    }\n  }, [mapLayer]);\n\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L && fires.length > 0) {\n      addFireMarkers(mapInstanceRef.current, window.L);\n    }\n  }, [fires]);\n\n  const addFirePolygons = (map, L, fire) => {\n    const { geometry } = fire;\n    \n    try {\n      if (geometry.type === 'Polygon') {\n        // For Polygon: coordinates[0] is the outer ring\n        const coords = geometry.coordinates[0];\n        \n        // Validate coordinates array\n        if (!coords || coords.length < 3) {\n          console.warn('Invalid polygon coordinates for fire:', fire.name);\n          return;\n        }\n        \n        // Convert [lng, lat] to [lat, lng] and filter out invalid coordinates\n        const leafletCoords = coords\n          .filter(coord => Array.isArray(coord) && coord.length >= 2 && \n                  typeof coord[0] === 'number' && typeof coord[1] === 'number' &&\n                  !isNaN(coord[0]) && !isNaN(coord[1]))\n          .map(coord => [coord[1], coord[0]]);\n        \n        if (leafletCoords.length < 3) {\n          console.warn('Not enough valid coordinates for polygon:', fire.name);\n          return;\n        }\n        \n        const polygon = L.polygon(leafletCoords, {\n          color: '#ef4444',\n          weight: 2,\n          opacity: 0.8,\n          fillColor: '#ef4444',\n          fillOpacity: 0.2\n        }).addTo(map);\n        \n        polygonsRef.current.push(polygon);\n        \n      } else if (geometry.type === 'MultiPolygon') {\n        geometry.coordinates.forEach((polygonCoords, index) => {\n          const coords = polygonCoords[0]; // outer ring\n\n          if (!coords || coords.length < 3) {\n            console.warn(`Invalid polygon coordinates for fire ${fire.name}, polygon ${index}`);\n            return;\n          }\n          \n          // Convert [lng, lat] to [lat, lng] and filter out invalid coordinates\n          const leafletCoords = coords\n            .filter(coord => Array.isArray(coord) && coord.length >= 2 && \n                    typeof coord[0] === 'number' && typeof coord[1] === 'number' &&\n                    !isNaN(coord[0]) && !isNaN(coord[1]))\n            .map(coord => [coord[1], coord[0]]);\n          \n          if (leafletCoords.length < 3) {\n            console.warn(`Not enough valid coordinates for polygon ${index} of fire:`, fire.name);\n            return;\n          }\n          \n          const polygon = L.polygon(leafletCoords, {\n            color: '#ef4444',\n            weight: 2,\n            opacity: 0.8,\n            fillColor: '#ef4444',\n            fillOpacity: 0.2\n          }).addTo(map);\n          \n          polygonsRef.current.push(polygon);\n        });\n      }\n    } catch (error) {\n      console.error('Error adding fire polygon for', fire.name, ':', error);\n    }\n  };\n\n  const getIconSizeForSeverity = (severity) => {\n    switch (severity) {\n      case 'High':\n        return { size: 36, fontSize: '18px' };\n      case 'Medium':\n        return { size: 32, fontSize: '16px' };\n      case 'Low':\n      default:\n        return { size: 28, fontSize: '14px' };\n    }\n  };\n\n  const addFireMarkers = (map, L) => {\n    try {\n      // clearing markers and polygons\n      markersRef.current.forEach(marker => map.removeLayer(marker));\n      polygonsRef.current.forEach(polygon => map.removeLayer(polygon));\n      markersRef.current = [];\n      polygonsRef.current = [];\n\n      // markers for the fire\n      fires.forEach(fire => {\n        // Add polygon outlines\n        addFirePolygons(map, L, fire);\n        \n        // Get icon size based on severity\n        const iconConfig = getIconSizeForSeverity(fire.severity);\n        \n        // fire icon with dynamic sizing\n        const fireIcon = L.divIcon({\n          html: `<div style=\"\n            background: linear-gradient(45deg, #ef4444, #f97316);\n            width: ${iconConfig.size}px;\n            height: ${iconConfig.size}px;\n            border-radius: 50%;\n            border: 3px solid white;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: ${iconConfig.fontSize};\n            cursor: pointer;\n          \">🔥</div>`,\n          className: 'fire-marker',\n          iconSize: [iconConfig.size, iconConfig.size],\n          iconAnchor: [iconConfig.size / 2, iconConfig.size / 2],\n          popupAnchor: [0, -iconConfig.size / 2]\n        });\n        \n        // Add marker\n        const marker = L.marker([fire.lat, fire.lng], { icon: fireIcon })\n          .addTo(map)\n          .bindPopup(`\n            <div style=\"color: #374151; font-family: system-ui;\">\n              <h3 style=\"font-weight: bold; font-size: 16px; margin: 0 0 8px 0;\">${fire.name}</h3>\n              <p style=\"margin: 2px 0;\">Size: ${fire.size} acres</p>\n              <p style=\"margin: 2px 0;\">Containment: ${fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n              <p style=\"margin: 2px 0; color: ${getSeverityColorHex(fire.severity)}; font-weight: 600;\">\n                Severity: ${fire.severity}\n              </p>\n              <button onclick=\"window.selectFire('${fire.id}')\" style=\"\n                background: #3b82f6;\n                color: white;\n                border: none;\n                padding: 4px 8px;\n                border-radius: 4px;\n                margin-top: 8px;\n                cursor: pointer;\n                font-size: 12px;\n              \">View Prediction</button>\n            </div>\n          `)\n          .on('click', () => handleFireClick(fire));\n\n        markersRef.current.push(marker);\n      });\n    } catch (error) {\n      console.error('Error adding fire markers:', error);\n    }\n  };\n\n  // make it global\n  useEffect(() => {\n    window.selectFire = (fireId) => {\n      const fire = fires.find(f => f.id === fireId);\n      if (fire) {\n        handleFireClick(fire);\n      }\n    };\n    \n    return () => {\n      delete window.selectFire;\n    };\n  }, [fires]);\n\n  const getSeverityColorHex = (severity) => {\n    switch (severity) {\n      case 'High': return '#ef4444';\n      case 'Medium': return '#f97316';\n      case 'Low': return '#eab308';\n      default: return '#6b7280';\n    }\n  };\n  \n  // ========================================================================================================================================\n  // This is where you would get the predictions from the model\n  // ========================================================================================================================================\n  const fetchPrediction = async (fireId, fireData) => {\n    if (!fireData) {\n      console.error('No fire data provided');\n      return;\n    }\n    \n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    // some mock data, we would import this from the model in production\n    const mockPrediction = {\n      fireId: fireId,\n      predictionDate: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      estimatedSize: fireData.size * (1.2 + Math.random() * 0.8),\n      confidence: Math.floor(Math.random() * 20) + 75,\n      riskLevel: Math.random() > 0.5 ? 'High' : 'Critical',\n      perimeter: [\n        [fireData.lat + 0.01, fireData.lng + 0.01],\n        [fireData.lat + 0.02, fireData.lng + 0.005],\n        [fireData.lat + 0.015, fireData.lng - 0.01],\n        [fireData.lat - 0.005, fireData.lng - 0.015],\n        [fireData.lat - 0.01, fireData.lng + 0.005]\n      ]\n    };\n    // then we display the predictions into the UI\n    setPrediction(mockPrediction);\n    setShowPrediction(true);\n    setLoading(false);\n  };\n\n  const handleFireClick = (fire) => {\n    setSelectedFire(fire);\n    fetchPrediction(fire.id, fire);\n  };\n  \n  // this is in the text when showing the severity of the fire\n  const getSeverityColor = (severity) => {\n    switch (severity) {\n      case 'High': return 'text-red-400';\n      case 'Medium': return 'text-orange-400';\n      case 'Low': return 'text-yellow-400';\n      default: return 'text-gray-400';\n    }\n  };\n  \n  // the date\n  const formatDate = (isoString) => {\n    if (!isoString) return 'N/A';\n    return new Date(isoString).toLocaleString();\n  };\n\n  const refreshData = async () => {\n    try {\n      setIsLoadingData(true);\n      setDataError(null);\n      const realTimeFireData = await fetchRealTimeFireData();\n      setFires(realTimeFireData);\n      console.log('Data refreshed successfully');\n    } catch (error) {\n      console.error('Failed to refresh data:', error);\n      setDataError(error.message);\n    } finally {\n      setIsLoadingData(false);\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-900 text-white\">\n      {/* the header at the top with like the logo and other settings */}\n      <header className=\"bg-gray-800 p-4 shadow-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Flame className=\"h-8 w-8 text-orange-500\" />\n            <h1 className=\"text-2xl font-bold\">Wildfire Prediction Dashboard</h1>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <select \n              value={mapLayer} \n              onChange={(e) => setMapLayer(e.target.value)}\n              className=\"bg-gray-700 text-white px-3 py-2 rounded-lg border border-gray-600\"\n            >\n              <option value=\"satellite\">Satellite</option>\n              <option value=\"terrain\">Terrain</option>\n              <option value=\"standard\">Standard</option>\n            </select>\n            <button \n              onClick={refreshData}\n              disabled={isLoadingData}\n              className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-lg flex items-center space-x-2 disabled:opacity-50\"\n            >\n              <RefreshCw className={`h-4 w-4 ${isLoadingData ? 'animate-spin' : ''}`} />\n              <span>Refresh</span>\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* the actual map itself */}\n        <div className=\"flex-1 relative\">\n          <div \n            ref={mapRef} \n            className=\"w-full h-full\"\n            style={{ minHeight: '500px' }}\n          />\n\n          {/* this is that thing that pops up when u click on the icon */}\n          <div className=\"absolute top-4 left-4 bg-gray-800 bg-opacity-95 backdrop-blur-sm rounded-lg p-4 shadow-xl max-w-sm z-[1000] border border-gray-600\">\n            <h3 className=\"text-lg font-bold mb-3 flex items-center text-white\">\n              <AlertTriangle className=\"h-5 w-5 mr-2 text-orange-500\" />\n              Active Fires ({fires.length})\n            </h3>\n            \n            {isLoadingData && (\n              <div className=\"flex items-center justify-center py-4\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-orange-500\"></div>\n                <span className=\"ml-2 text-sm\">Loading fire data...</span>\n              </div>\n            )}\n            \n            {dataError && (\n              <div className=\"bg-red-900 bg-opacity-50 p-3 rounded-lg mb-3 border border-red-700\">\n                <p className=\"text-sm text-red-200\">API Error: {dataError}</p>\n                <p className=\"text-xs text-red-300 mt-1\">Using demo data. Check console for details.</p>\n              </div>\n            )}\n            \n            <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n              {fires.map((fire) => (\n                <div\n                  key={fire.id}\n                  className=\"bg-gray-700 bg-opacity-90 p-3 rounded-lg cursor-pointer hover:bg-gray-600 hover:bg-opacity-95 transition-all duration-200 border border-gray-600\"\n                  onClick={() => handleFireClick(fire)}\n                >\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-semibold text-white\">{fire.name}</h4>\n                      <p className=\"text-sm text-gray-200\">{fire.size} acres</p>\n                      <p className=\"text-xs text-gray-300\">Containment: {fire.containment ? `${fire.containment}%` : 'N/A'}</p>\n                    </div>\n                    <div className=\"text-right ml-2\">\n                      <span className={`text-sm font-medium ${getSeverityColor(fire.severity)}`}>\n                        {fire.severity}\n                      </span>\n                      <div className=\"text-xs text-gray-400 mt-1\">\n                        Click for prediction\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* panel where it shows predictions (the one on the right) */}\n        {showPrediction && (\n          <div className=\"w-96 bg-gray-800 p-6 overflow-y-auto shadow-xl border-l border-gray-700\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-xl font-bold\">Fire Prediction</h2>\n              <button\n                onClick={() => setShowPrediction(false)}\n                className=\"text-gray-400 hover:text-white transition-colors\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            {loading ? (\n              <div className=\"flex items-center justify-center h-32\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-orange-500\"></div>\n                <span className=\"ml-2\">Generating prediction...</span>\n              </div>\n            ) : (\n              selectedFire && prediction && (\n                <div className=\"space-y-6\">\n                  {/* fire info */}\n                  <div className=\"bg-gray-700 p-4 rounded-lg\">\n                    <h3 className=\"font-semibold text-lg mb-2\">{selectedFire.name}</h3>\n                    <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                      <div>Size: {selectedFire.size} acres</div>\n                      <div>Containment: {selectedFire.containment ? `${selectedFire.containment}%` : 'N/A'}</div>\n                      <div className={getSeverityColor(selectedFire.severity)}>\n                        Severity: {selectedFire.severity}\n                      </div>\n                      <div>Updated: {formatDate(selectedFire.lastUpdate)}</div>\n                    </div>\n                  </div>\n\n                  {/* weather data */}\n                  {selectedFire.weather && (\n                    <div className=\"bg-gray-700 p-4 rounded-lg\">\n                      <h4 className=\"font-semibold mb-2 flex items-center\">\n                        <Thermometer className=\"h-4 w-4 mr-2\" />\n                        Current Weather\n                      </h4>\n                      <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                        <div>Temperature: {selectedFire.weather.temperature}°F</div>\n                        <div>Humidity: {selectedFire.weather.humidity}%</div>\n                        <div className=\"flex items-center\">\n                          <Wind className=\"h-3 w-3 mr-1\" />\n                          Wind: {selectedFire.weather.windSpeed} mph {selectedFire.weather.windDirection}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* predictions */}\n                  <div className=\"bg-red-900 bg-opacity-50 p-4 rounded-lg border border-red-700\">\n                    <h4 className=\"font-semibold mb-2 flex items-center\">\n                      <Calendar className=\"h-4 w-4 mr-2\" />\n                      24-Hour Prediction\n                    </h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div>Estimated Size: {Math.round(prediction.estimatedSize)} acres</div>\n                      <div>Growth: +{Math.round(prediction.estimatedSize - selectedFire.size)} acres</div>\n                      <div>Risk Level: <span className=\"text-red-400 font-semibold\">{prediction.riskLevel}</span></div>\n                      <div>Confidence: {prediction.confidence}%</div>\n                      <div>Prediction Date: {formatDate(prediction.predictionDate)}</div>\n                    </div>\n                  </div>\n                </div> \n              )\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WildfireDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}